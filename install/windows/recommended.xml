<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 671a3705f5eec54979176ffdd09e61580e2f7d0a Maintainer: mumumu Status: ready -->

<sect1 xml:id="install.windows.recommended" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Windows でのおすすめの構成</title>
 <sect2>
  <title>OpCache</title>
  <para>
    OpCache を有効にすることを強く推奨します。この拡張モジュールは Windows 版の PHP に含まれています。
    これは PHP スクリプトをコンパイルして最適化したうえで、メモリにキャッシュします。
    そのため、ページを読み込むたびにコンパイルされることがなくなります。
  </para>
  <para>
   &php.ini; では、次のように設定します:
   <example>
    <title>OpCache の推奨構成</title>
    <screen>
<![CDATA[
opcache.enable=On
opcache.enable_cli=On
]]>
    </screen>
   </example>
   そしてウェブサーバーを再起動します。

   詳細な情報は <link linkend="opcache.configuration">OpCache の実行時設定</link> を参照ください。
  </para>
 </sect2>
 <sect2>
  <title>WinCache</title>
  <para>
    IIS を使うなら、
    WinCache を有効にすることを推奨します。
    特に、共有ウェブホスティング環境やネットワークファイルストレージ (NAS) での利用の際におすすめです。
    但し、PHP 8.0.0 以降では
    WinCache はサポートされていないことに注意して下さい。

    すべての PHP アプリケーションが、
    WinCache のファイルキャッシュ機能の恩恵を受けられます。
    ファイルシステム上での操作が、メモリにキャッシュされるのです。

    WinCache は、メモリ内のユーザーオブジェクトをキャッシュして、
    <varname>php.exe</varname> や 
    <varname>php-cgi.exe</varname> のプロセス間で共有することもできます (複数リクエストでのオブジェクトの共有)。

    主要なウェブアプリケーションの多くは、
    プラグインや拡張モジュールあるいは設定オプションで
    WinCache のユーザーオブジェクトキャッシュを使えるようになっています。

    ハイパフォーマンスを求めるなら、
    アプリケーション内でオブジェクトキャッシュを利用すべきです。

    <link xlink:href="http://pecl.php.net/package/WinCache">http://pecl.php.net/package/WinCache</link> から
    WinCache DLL (あるいは <filename>WINCACHE_<replaceable>*</replaceable>.tgz</filename>) をダウンロードして、
    PHP の 拡張モジュール用ディレクトリ(<filename>php.ini</filename> の <link linkend="ini.extension-dir">extension_dir</link>) に配置しましょう。

    &php.ini; では、次のように設定します:
   <example>
    <title>WinCache の推奨構成</title>
    <screen>
<![CDATA[
extension=php_wincache.dll
wincache.fcenabled=1
wincache.ocenabled=1 ; removed as of wincache 2.0.0.0
]]>
    </screen>
   </example>
   詳細な情報は <link xlink:href="http://php.net/manual/ja/wincache.configuration.php">http://php.net/manual/ja/wincache.configuration.php</link> を参照ください。
  </para>
 </sect2>

 <sect2>
  <title>IIS の構成</title>

  <para>
   IIS マネージャーで FastCGI モジュールをインストールして、<varname>`.php`</varname> へのハンドラマッピングを追加します。ここでは、<varname>PHP-CGI.exe</varname> へのパスを指定します (<varname>PHP.exe</varname> ではありません)。
  </para>

  <para>
    コマンドラインツール APPCMD を使えば、IIS の構成をスクリプト化できます。
  </para>
 </sect2>

 <sect2>
  <title>データベース</title>
  <para>
    おそらく、データベースサーバーも必要となることでしょう。
    主要なデータベースは PHP 用の拡張モジュールを提供しています。
    もしウェブサイトへのアクセスがそれほど多くないのなら、
    ウェブサーバーと同じマシンでデータベースを動かすこともできます。
    主要なデータベースの多くは Windows 上でも動作します。
  </para>

  <para>PHP には mysqli 拡張モジュールと pdo_mysql 拡張モジュールが含まれています。</para>
  <para>
   <link xlink:href="https://dev.mysql.com/downloads/windows/">https://dev.mysql.com/downloads/windows/</link> を参照ください。
  </para>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
