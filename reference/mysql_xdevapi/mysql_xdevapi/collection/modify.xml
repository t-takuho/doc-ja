<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ee52285714f7f7371364a3e5233d2ca2da078706 Maintainer: mumumu Status: ready -->

<refentry xml:id="mysql-xdevapi-collection.modify" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Collection::modify</refname>
  <refpurpose>コレクションのドキュメントを変更する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mysql_xdevapi\CollectionModify</type><methodname>mysql_xdevapi\Collection::modify</methodname>
   <methodparam><type>string</type><parameter>search_condition</parameter></methodparam>
  </methodsynopsis>
  <para>
   特定の検索条件にマッチするドキュメントのコレクションを変更します。
   複数の操作が可能であり、パラメータのバインドもサポートされています。
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>search_condition</parameter></term>
    <listitem>
     <para>
      変更するドキュメントに
      マッチさせるために使う、有効な MySQL の式でなければなりません。
      この式は、&true; と評価される単純なものであれば可能です。
      &true; と評価された全てのドキュメントにマッチします。
      もしくは、関数と指揮を次のように使うこともできます。
      <code>'CAST(_id AS SIGNED) >= 10'</code>, 
      <code>'age MOD 2 = 0 OR age MOD 3 = 0'</code>,
      <code>'_id IN ["2","5","7","10"]'</code>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   操作が実行されない場合、この関数は追加の変更操作を追加できる
   Modify オブジェクトを返します。
  </para>
  <para>
   変更操作が実行された場合、返されるオブジェクトには操作結果が含まれます。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>mysql_xdevapi\Collection::modify</function> の例</title>
   <programlisting role="php">
<![CDATA[
<?php
$session = mysql_xdevapi\getSession("mysqlx://user:password@localhost");

$session->sql("DROP DATABASE IF EXISTS addressbook")->execute();
$session->sql("CREATE DATABASE addressbook")->execute();

$schema     = $session->getSchema("addressbook");
$collection = $schema->createCollection("people");

$collection->add('{"name": "Alfred", "age": 18, "job": "Butler"}')->execute();
$collection->add('{"name": "Bob",    "age": 19, "job": "Painter"}')->execute();

// 全ての Painter のばめに、ふたつ job を追加: Artist と Crafter です
$collection
  ->modify("job in ('Butler', 'Painter')")
  ->arrayAppend('job', 'Artist')
  ->arrayAppend('job', 'Crafter')
  ->execute();

// age が 21 の全てのドキュメントから、'beer' フィールドを削除
$collection
  ->modify('age < 21')
  ->unset(['beer'])
  ->execute();
?>
]]>
   </programlisting>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
