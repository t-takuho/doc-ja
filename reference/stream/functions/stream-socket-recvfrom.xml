<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e50e79746736dbdfbabe9bd3566793b3ddf38f58 Maintainer: takagi Status: ready -->
<refentry xml:id="function.stream-socket-recvfrom" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>stream_socket_recvfrom</refname>
  <refpurpose>接続されているかどうかにかかわらず、ソケットからのデータを受信する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>stream_socket_recvfrom</methodname>
   <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
   <methodparam><type>int</type><parameter>length</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter role="reference">address</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>stream_socket_recvfrom</function> は、
   リモートソケットから最大 <parameter>length</parameter> バイトのデータを
   受け取ります。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       リモートソケット。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       <parameter>socket</parameter> から受信するバイト数。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags</parameter> は以下の値の組み合わせです。
       <table>
        <title><parameter>flags</parameter> でとりうる値</title>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry><constant>STREAM_OOB</constant></entry>
           <entry>
            OOB (<literal>out-of-band</literal>) データを処理します。
           </entry>
          </row>
          <row>
           <entry><constant>STREAM_PEEK</constant></entry>
           <entry>
            ソケットからデータを取得しますが、バッファを消費しません。
            <function>fread</function> あるいは
            <function>stream_socket_recvfrom</function> を続けてコールした
            際には、同じデータが読み込まれます。
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>address</parameter></term>
     <listitem>
      <para>
       <parameter>address</parameter> が指定された場合、
       そこにはリモートソケットのアドレスが保存されます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   読み込んだデータを文字列で返します。
   &return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>stream_socket_recvfrom</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
/* localhost のポート 1234 へのサーバーソケットをオープンします */
$server = stream_socket_server('tcp://127.0.0.1:1234');

/* 接続を受け付けます */
$socket = stream_socket_accept($server);

/* OOB データのパケットを取得します（1500 は典型的な MTU のサイズです） */
echo "Received Out-Of-Band: '" . stream_socket_recvfrom($socket, 1500, STREAM_OOB) . "'\n";

/* 通常の帯域内のデータを読み込みますが、バッファを消費しません */
echo "Data: '" . stream_socket_recvfrom($socket, 1500, STREAM_PEEK) . "'\n";

/* 同じパケットをもう一度読み込みます。今度はバッファからそれを削除します */
echo "Data: '" . stream_socket_recvfrom($socket, 1500) . "'\n";

/* ソケットを閉じます */
fclose($socket);
fclose($server);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    受信したメッセージが <parameter>length</parameter> パラメータより
    長かった場合、ソケットの型によっては（例えば UDP など）超過分の
    バイトデータが捨てられてしまう可能性があります。
   </para>
  </note>
  <note>
   <para>
    バッファベースのストリーム関数 (<function>fread</function> あるいは
    <function>stream_get_line</function> など) をコールした後に
    ソケットベースのストリームで <function>stream_socket_recvfrom</function>
    をコールすると、ストリームバッファを経由せず、データをソケットから
    直接読み込みます。
    </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>stream_socket_sendto</function></member>
   <member><function>stream_socket_client</function></member>
   <member><function>stream_socket_server</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
