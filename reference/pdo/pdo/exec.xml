<?xml version="1.0" encoding="utf-8" ?>
<!-- $Revision$ -->
<!-- EN-Revision: 28529d3539b850e870e3aa97570f4db0e53daa03 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka,mumumu -->
<refentry xml:id="pdo.exec" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::exec</refname>
  <refpurpose>
   SQL ステートメントを実行し、作用した行数を返す
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>int</type><type>false</type></type><methodname>PDO::exec</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
  </methodsynopsis>

  <para>
   <methodname>PDO::exec</methodname> は、一度の関数コールで SQL
   文を実行し、文によって作用した行数を返します。
  </para>
  <para>
   <methodname>PDO::exec</methodname> は SELECT 文からは結果を返しません。
   プログラム中で一度だけ発行が必要になる SELECT 文に対しては、
   <methodname>PDO::query</methodname> の発行を検討してください。
   複数回発行が必要な文については、<methodname>PDO::prepare</methodname>
   による PDOStatement オブジェクトの準備と
   <methodname>PDOStatement::execute</methodname> による文の発行を行ってください。
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
      <listitem>
       <para>
        準備、実行する SQL ステートメントを指定します。
       </para>
       <para>
        クエリ内のデータは <link
        linkend="pdo.quote">適切にエスケープ</link>
        する必要があります。
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <methodname>PDO::exec</methodname> は、発行した SQL
   ステートメントによって更新もしくは
   削除された行数を返します。
   1 行も作用しなかった場合、<methodname>PDO::exec</methodname> は
   <literal>0</literal> を返します。
  </para>

  &return.falseproblem;
  <para>
   以下の例は <methodname>PDO::exec</methodname>
   の戻り値の使用法を間違っています。結果として一行も更新されなかった場合に
   <function>die</function> がコールされてしまうからです。
   <programlisting role="php">
<![CDATA[
<?php
$db->exec() or die(print_r($db->errorInfo(), true)); // 間違っている
?>
]]>
   </programlisting>
  </para>

 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>DELETE 文の発行</title>
    <para>
     WHERE 句を伴う DELETE 文によって削除された行数をカウントします。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$dbh = new PDO('odbc:sample', 'db2inst1', 'ibmdb2');

/* FRUIT テーブルから全ての行を削除する */
$count = $dbh->exec("DELETE FROM fruit");

/* 削除された行数を返す */
print "Deleted $count rows.\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Deleted 1 rows.
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDO::query</methodname></member>
    <member><methodname>PDOStatement::execute</methodname></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
