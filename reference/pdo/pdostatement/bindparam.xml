<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 28529d3539b850e870e3aa97570f4db0e53daa03 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka,mumumu -->
<refentry xml:id="pdostatement.bindparam" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::bindParam</refname>
  <refpurpose>
   指定された変数名にパラメータをバインドする
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDOStatement">
   <modifier>public</modifier> <type>bool</type><methodname>PDOStatement::bindParam</methodname>
   <methodparam><type class="union"><type>string</type><type>int</type></type><parameter>param</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>PDO::PARAM_STR</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>maxLength</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>driverOptions</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   準備された SQL ステートメント中で、
   対応する名前もしくは疑問符プレースホルダにパラメータをバインドします。
   <methodname>PDOStatement::bindValue</methodname> と異なり、
   変数は参照としてバインドされ、<methodname>PDOStatement::execute</methodname>
   がコールされたときのみ評価されます。
  </para>
  <para>
   ほとんどのパラメータは入力パラメータです。つまり、クエリを構築する際、
   パラメータは読み込み専用で使用されます(とはいえ、
   <parameter>type</parameter> によってはキャストされる可能性もあります)。
   いくつかのドライバは、出力パラメータとしてデータを返す
   ストアドプロシージャの実行をサポートしており、
   またいくつかのドライバは、データを渡し更新された値を受け取る、
   といった入出力パラメータもサポートしています。
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>param</parameter></term>
      <listitem>
       <para>
        パラメータ ID を指定します。名前付けされたプレースホルダを使った文に
        対しては、<varname>:name</varname> 形式のパラメータ名となります。
        疑問符プレースホルダを使った文に対しては、1 から始まるパラメータの
        位置となります。
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
      <listitem>
       <para>
        SQL ステートメントパラメータにバインドする PHP 変数名を指定します。
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
      <listitem>
       <para>
        パラメータに対して
        <link linkend="pdo.constants"><literal>PDO::PARAM_*</literal> 定数</link>
        を使った明示的なデータ型を指定します。
        ストアドプロシージャからの INOUT パラメータの場合、
        <parameter>type</parameter> パラメータに
        <constant>PDO::PARAM_INPUT_OUTPUT</constant>
        ビットを設定するためにビット OR を使用してください。
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>maxLength</parameter></term>
      <listitem>
       <para>
        データ型の長さを指定します。パラメータがストアドプロシージャからの
        OUT パラメータであることを示す場合、
        明示的に長さを設定しなければなりません。
        この値は、<parameter>type</parameter> パラメータに
        <constant>PDO::PARAM_INPUT_OUTPUT</constant>
        を指定した場合のみ意味があります。
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>driverOptions</parameter></term>
     <listitem>
      <para>
         
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example><title>名前付けされたプレースホルダを用いてプリペアドステートメントを実行する</title>
   <programlisting role="php">
<![CDATA[
<?php
/* バインドされた PHP 変数によってプリペアドステートメントを実行する */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour');
$sth->bindParam('calories', $calories, PDO::PARAM_INT);
/* 名前の前にも、コロン ":" を付けることができます(オプション) */
$sth->bindParam(':colour', $colour, PDO::PARAM_STR);
$sth->execute();
?>
]]>
   </programlisting>
  </example>

  <example><title>疑問符プレースホルダを用いてプリペアドステートメントを実行する</title>
   <programlisting role="php">
<![CDATA[
<?php
/* バインドされた PHP 変数によってプリペアドステートメントを実行する */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?');
$sth->bindParam(1, $calories, PDO::PARAM_INT);
$sth->bindParam(2, $colour, PDO::PARAM_STR);
$sth->execute();
?>
]]>
   </programlisting>
  </example>

<!--
  <example><title>プリペアドステートメントに NULL 値を渡す</title>
   <programlisting role="php">
<![CDATA[
<?php
/* バインドされた PHP 変数によってプリペアドステートメントを実行する */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour');
$sth->bindParam(':calories', $calories, PDO::PARAM_INT);

/* colour カラムが NULL である fruit を検索する */
$sth->bindParam(':colour', $colour, PDO::PARAM_NULL);

$sth->execute();
?>
]]>
   </programlisting>
  </example>
-->
  <example><title>INOUT パラメータを持つストアドプロシージャをコールする</title>
   <programlisting role="php">
<![CDATA[
<?php
/* INOUT パラメータを持つストアドプロシージャをコールする */
$colour = 'red';
$sth = $dbh->prepare('CALL puree_fruit(?)');
$sth->bindParam(1, $colour, PDO::PARAM_STR|PDO::PARAM_INPUT_OUTPUT, 12);
$sth->execute();
print "After pureeing fruit, the colour is: $colour";
?>
]]>
   </programlisting>
  </example>

 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDOStatement::execute</methodname></member>
    <member><methodname>PDOStatement::bindValue</methodname></member>
   </simplelist>
  </para>

 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
