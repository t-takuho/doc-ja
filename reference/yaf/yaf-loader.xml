<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ecaa2146429a7f88de40dfce14718afc896b74c5 Maintainer: takagi Status: ready -->

<reference xml:id="class.yaf-loader" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Yaf_Loader クラス</title>
 <titleabbrev>Yaf_Loader</titleabbrev>

 <partintro>

<!-- {{{ Yaf_Loader intro -->
  <section xml:id="yaf-loader.intro">
   &reftitle.intro;
   <para>
    <classname>Yaf_Loader</classname> は、
    Yaf 用に包括的なオートローディング機能を導入します。
   </para>
   <para>
    最初に <classname>Yaf_Application</classname> のインスタンスを取得するときに、
    <classname>Yaf_Loader</classname> はシングルトンのインスタンスを作って
    それを spl_autoload に登録します。このインスタンスを取得するには
    <methodname>Yaf_Loader::getInstance</methodname> を使います。
   </para>
   <para>
    <classname>Yaf_Loader</classname> は、クラスのロードを一度だけ試みます。
    失敗した場合の挙動は <link
     linkend="ini.yaf.use-spl-autoload">yaf.use_spl_auload</link>
    によって変わります。もしこの設定が On なら
    <methodname>Yaf_Loader::autoload</methodname> は &false; を返し、
    他のオートロード関数でやり直せるようになります。この設定が Off (デフォルト)
    の場合は <methodname>Yaf_Loader::autoload</methodname> が &true; を返します。
    そして、より重要なのは、このときに警告メッセージが出ることです
    (このメッセージを見れば、なぜロードできなかったのかがわかります)。
    <note>
     <para>
      yaf.use_spl_autoload はできるだけ Off のままにしておきましょう。
      ただし、何かのライブラリが自前のオートロード機構を持っていて、
      それを置き換えるのが不可能だという場合は別です。
     </para>
    </note>
   </para>
   <para>
    デフォルトでは、<classname>Yaf_Loader</classname> はすべてのライブラリ
    (クラスを定義したスクリプト) が <link linkend="ini.yaf.library">グローバル
    ライブラリディレクトリ</link> に格納されているものとみなします。このディレクトリは、
    php.ini (yaf.library) で指定します。
   </para>

   <para>
    <classname>Yaf_Loader</classname> がクラス (ライブラリ) を探すときに
    <link linkend="yaf-loader.props.library">ローカルクラスディレクトリ</link>
    (application.ini で定義するもので、デフォルトは
    <link
     linkend="configuration.yaf.directory">application.directory</link> . "/library")
    も検索対象とさせたい場合は、クラスのプレフィックスを
    <methodname>Yaf_Loader::registerLocalNameSpace</methodname>
    で登録する必要があります。
   </para>

   <para>
    いくつか例を示します (APPLICATION_PATH は <link
     linkend="configuration.yaf.directory">application.directory</link>
    であるものとします)。
    <example>
     <title>設定の例</title>
      <programlisting role="shell">
<![CDATA[
// php.ini で、これを設定しているものとします
yaf.library = "/global_dir"

// application.ini で、これを設定しているものとします
application.library = APPLICATION_PATH "/library"
]]>
     </programlisting>
    </example>

    また、次のローカル名前空間を登録しているものとします。
    <example>
     <title>localnamespace の登録</title>
     <programlisting role="php">
<![CDATA[
<?php
class Bootstrap extends Yaf_Bootstrap_Abstract{
     public function _initLoader($dispatcher) {
          Yaf_Loader::getInstance()->registerLocalNameSpace(array("Foo", "Bar"));
     }
?>
]]>
     </programlisting>
    </example>

   オートロードの例です。
    <example>
     <title>クラスのロード</title>
      <programlisting role="shell">
<![CDATA[
class Foo_Bar_Test =>
  // APPLICATION_PATH/library/Foo/Bar/Test.php
  
class GLO_Name  =>
  // /global_dir/Glo/Name.php
 
class BarNon_Test
  // /global_dir/Barnon/Test.php
]]>
      </programlisting>
    </example>

   <example>
    <title>名前空間つきのクラスのロード</title>
    <programlisting role="shell">
<![CDATA[
class \Foo\Bar\Dummy =>
   // APPLICATION_PATH/library/Foo/Bar/Dummy.php

class \FooBar\Bar\Dummy =>
   // /global_dir/FooBar/Bar/Dummy.php
]]>
    </programlisting> 
   </example>
  </para>

  <para>
    すべてのフォルダの先頭が大文字になっているのが気になる場合は、php.ini で
    <link linkend="ini.yaf.lowcase-path">yaf.lowcase_path</link> = On
    とすれば小文字にすることもできます。
  </para>

  <para>
   <classname>Yaf_Loader</classname> は MVC クラスを読み込むようにも作られています。
   次のような規約に従います。
   <example>
    <title>MVC クラスのロード</title>
    <programlisting role="shell">
<![CDATA[
Controller Classes =>
// APPLICATION_PATH/controllers/

Model Classes =>
// APPLICATION_PATH/models/

Plugin Classes =>
// APPLICATION_PATH/plugins/
]]>
    </programlisting>
   </example>

   クラスのサフィックス (デフォルト設定の場合。プレフィックスを使うには
   <link linkend="ini.yaf.name-suffix">yaf.name_suffix</link> の値を変更します)
   で、MVC クラスであるかそうでないかを判断します。
   <example>
    <title>MVC クラスかどうかの区別</title>
   <programlisting role="shell">
<![CDATA[
Controller Classes =>
    // ***Controller

Model Classes =>
    // ***Model

Plugin Classes =>
    // ***Plugin
]]>
   </programlisting>
  </example>

   例を示します。
   <example>
    <title>MVC のロード</title>
    <programlisting role="shell">
<![CDATA[
class IndexController
    // APPLICATION_PATH/controllers/Index.php

class DataModel =>
   // APPLICATION_PATH/models/Data.php

class DummyPlugin =>
  // APPLICATION_PATH/plugins/Dummy.php

class A_B_TestModel =>
  // APPLICATION_PATH/models/A/B/Test.php
]]>
    </programlisting>
  </example>

  <note>
   <para>
    2.1.18 からは、Yaf はユーザースクリプト側からのコントローラのオートロードに対応しました
    (つまり、ユーザーが書いた PHP スクリプトからオートロードを実行できるということです。
    ブートストラップやプラグインから、コントローラのstaticプロパティにアクセスできます)。
    しかし、オートローダーがコントローラクラスを探す場所は、デフォルトのモジュールフォルダつまり
    "APPLICATION_PATH/controllers/" だけになります。
   </para>
  </note>
   また、ディレクトリは <link linkend="ini.yaf.lowcase-path">yaf.lowcase_path</link>
   の影響を受けます。
  </para>
  </section>
<!-- }}} -->

  <section xml:id="yaf-loader.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Yaf_Loader</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Yaf_Loader</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>protected</modifier>
     <varname linkend="yaf-loader.props.local-ns">_local_ns</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>protected</modifier>
     <varname linkend="yaf-loader.props.library">_library</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>protected</modifier>
     <varname linkend="yaf-loader.props.global-library">_global_library</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>static</modifier>
     <varname linkend="yaf-loader.props.instance">_instance</varname>
    </fieldsynopsis>

    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-loader')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])" />
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-loader')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  
<!-- {{{ Yaf_Loader properties -->
  <section xml:id="yaf-loader.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="yaf-loader.props.local-ns">
     <term><varname>_local_ns</varname></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="yaf-loader.props.library">
     <term><varname>_library</varname></term>
     <listitem>
      <para>
       デフォルトでは、この値は <link
        linkend="configuration.yaf.directory">application.directory</link> . "/library"
       となります。この値を変更するには、application.ini (application.library)
       で設定するか、あるいは <methodname>Yaf_Loader::setLibraryPath</methodname> をコールします。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="yaf-loader.props.global-library">
     <term><varname>_global_library</varname></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="yaf-loader.props.instance">
     <term><varname>_instance</varname></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->


 </partintro>
 

 &reference.yaf.entities.yaf-loader;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
