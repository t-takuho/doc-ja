<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ecaa2146429a7f88de40dfce14718afc896b74c5 Maintainer: takagi Status: ready -->

<reference xml:id="class.yaf-router" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Yaf_Router クラス</title>
 <titleabbrev>Yaf_Router</titleabbrev>

 <partintro>

<!-- {{{ Yaf_Router intro -->
  <section xml:id="yaf-router.intro">
   &reftitle.intro;
   <para>
   <classname>Yaf_Router</classname> は、フレームワークの標準のルーターです。
   ルーティングとは、URI エンドポイント (URI の中で、ベース URL の後に続く部分。
   <methodname>Yaf_Request_Abstract::setBaseUri</methodname> を参照ください) を受け取ってそこからパラメータを抽出し、
   リクエストを受け取るモジュールやコントローラそしてアクションを判断する処理のことです。
   モジュール、コントローラ、アクション、そしてその他のパラメータは
   <classname>Yaf_Request_Abstract</classname> オブジェクトにまとめられ、
   そして <classname>Yaf_Dispatcher</classname> で処理します。
   ルーティングが行われるのは一度だけで、リクエストを最初に受け取ってから
   最初のコントローラにディスパッチする前に行われます。

   <classname>Yaf_Router</classname> は、mod_rewrite 風の機能を
   PHP を使って実現できるような設計になっています。
   Ruby on Rails のルーティング方式を参考にしており、
   ウェブサーバーの URL リライト機能に関する事前知識は不要です。
   Apache の場合は、次のような mod_rewrite ルールを書けば使えます。
   <example>
    <title>Apache 用のリライトルール</title>
   <programlisting role="conf">
<![CDATA[
RewriteEngine on
RewriteRule !\.(js|ico|gif|jpg|png|css|html)$ index.php
]]>
   </programlisting>
   </example>
   あるいは、次のようにもできます (こちらのほうを推奨します)。
   <example>
    <title>Apache 用のリライトルール</title>
   <programlisting role="conf">
<![CDATA[
RewriteEngine On
RewriteCond %{REQUEST_FILENAME} -s [OR]
RewriteCond %{REQUEST_FILENAME} -l [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^.*$ - [NC,L]
RewriteRule ^.*$ index.php [NC,L]
]]>
   </programlisting>
  </example>
   Lighttpd の場合は、次のようなリライトルールを指定します。
   <example>
    <title>Lighttpd 用のリライトルール</title>
   <programlisting role="conf">
<![CDATA[
url.rewrite-once = (
  ".*\?(.*)$" => "/index.php?$1",
  ".*\.(js|ico|gif|jpg|png|css|html)$" => "$0",
  "" => "/index.php"
)
]]>
   </programlisting>
  </example>
   Nginx の場合は、次のようなリライトルールを指定します。
   <example>
    <title>Nginx 用のリライトルール</title>
   <programlisting role="conf">
<![CDATA[
server {
  listen ****;
  server_name  yourdomain.com;
  root   document_root;
  index  index.php index.html;

  if (!-e $request_filename) {
    rewrite ^/(.*)  /index.php/$1 last;
  }
}
]]>
   </programlisting>
  </example>
   </para>
  </section>
<!-- }}} -->

  <section xml:id="yaf-router.default">
   <title>デフォルトのルート</title>
   <para>
   <classname>Yaf_Router</classname> には設定済みのデフォルトルート <classname>Yaf_Route_Static</classname> が用意されており、これは
   controller/action 形式の URI にマッチします。
   さらに、モジュール名を最初のパス要素として指定できます。この場合の URI は
   module/controller/action 形式になります。
   また、追加のパラメータを URI に追記できるようになっています。つまり
   controller/action/var1/value1/var2/value2 といった形式です。
    <note>
     <para>
      モジュール名は設定ファイルで定義しておく必要があります。
      たとえば application.module="Index,Foo,Bar" とすると、
      index、foo、bar だけがモジュール名とみなされます。
      設定をしなかった場合は、モジュール名とみなされるのは "Index" だけです。
     </para>
    </note>
   </para>

   <para>
   ルートのマッチングの例を示します。
   <example>
    <title><classname>Yaf_Route_Static</classname> のデフォルトルート</title>
   <programlisting role="conf">
<![CDATA[
// このように設定しているものとします
$conf = array(
   "application" => array(
      "modules" => "Index,Blog",
   ),
);

コントローラのみ
http://example/news
    controller == news
アクションのみ (php.ini で yaf.action_prefer=1 とした場合)
    action  == news
 
モジュール名として無効な場合はコントローラ名とみなします
http://example/foo
    controller == foo
 
モジュール + コントローラ
http://example/blog/archive
    module     == blog
    controller == archive
 
モジュール + コントローラ + アクション
http://example/blog/archive/list
    module     == blog
    controller == archive
    action     == list
 
モジュール + コントローラ + アクション + パラメータ
http://example/blog/archive/list/sort/alpha/date/desc
    module     == blog
    controller == archive
    action     == list
    sort       == alpha
    date       == desc
]]>
   </programlisting>
  </example>

  </para>
  </section>

  <section xml:id="yaf-router.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Yaf_Router</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Yaf_Router</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>protected</modifier>
     <varname linkend="yaf-router.props.routes">_routes</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>protected</modifier>
     <varname linkend="yaf-router.props.current">_current</varname>
    </fieldsynopsis>

    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-router')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])" />
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-router')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  
<!-- {{{ Yaf_Router properties -->
  <section xml:id="yaf-router.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="yaf-router.props.routes">
     <term><varname>_routes</varname></term>
     <listitem>
      <para>
       登録されたルートスタック。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="yaf-router.props.current">
     <term><varname>_current</varname></term>
     <listitem>
      <para>
       ルーティングを終えた後に、
       今回のリクエストで使ったルートの名前がここに入ります。

       この名前を取得するには
       <methodname>Yaf_Router::getCurrentRoute</methodname> を使います。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->


 </partintro>

 &reference.yaf.entities.yaf-router;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
