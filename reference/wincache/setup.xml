<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 48ce43fe79fa0c9f31f187ea8ec995b4cb13037e Maintainer: takagi Status: ready -->

<chapter xml:id="wincache.setup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.setup;

 <section xml:id="wincache.requirements">
  &reftitle.required;
  <para>
   この拡張モジュールは、現在は次の構成のみをサポートしています。
  </para>
  <simpara>Windows OS</simpara>
  <itemizedlist spacing="compact">
   <listitem>
    <simpara>Windows XP SP3 上での IIS 5.1 および <link xlink:href="&url.iis.fastcgi.downloads;">FastCGI Extension</link></simpara>
   </listitem>
   <listitem>
    <simpara>Windows Server 2003 上での IIS 6.0 および <link xlink:href="&url.iis.fastcgi.downloads;">FastCGI Extension</link></simpara>
   </listitem>
   <listitem>
    <simpara>Windows Vista SP1 上での IIS 7.0 および FastCGI Module</simpara>
   </listitem>
   <listitem>
    <simpara>Windows Server 2008 上での IIS 7.0 および FastCGI Module</simpara>
   </listitem>
   <listitem>
    <simpara>Windows 7 上での IIS 7.5 および FastCGI Module</simpara>
   </listitem>
   <listitem>
    <simpara>Windows Server 2008 R2 上での IIS 7.5 および FastCGI Module</simpara>
   </listitem>
  </itemizedlist>
  <simpara>PHP</simpara>
  <itemizedlist spacing="compact">
   <listitem>
    <simpara>PHP 5.2.X, Non-thread-safe build</simpara>
   </listitem>
   <listitem>
    <simpara>PHP 5.3 X86, Non-thread-safe VC9 build</simpara>
   </listitem>
  </itemizedlist>
  <note>
   <simpara>
    WinCache 拡張モジュールは、IIS の設定で PHP を FastCGI 経由で動かすようにしている場合しか使えません。
   </simpara>
  </note>
 </section>
 <section xml:id="wincache.installation">
  &reftitle.install;
  <para>
   &pecl.moved;
  </para>
  <para>
   &pecl.info;
   <link xlink:href="&url.pecl.package;wincache">&url.pecl.package;wincache</link>.
  </para>
  <para>
   この拡張モジュールには二種類のパッケージがあります。PHP 5.2.X 用と
   PHP 5.3.X 用です。使っている PHP のバージョンにあわせて適切なほうを選びましょう。
  </para>
  <para>
   この拡張モジュールをインストールする手順は次のとおりです。
  </para>
  <procedure>
   <step>
    <simpara>
     どこか一時的な場所にパッケージを展開します。
    </simpara>
   </step>
   <step>
    <simpara>
     <filename>php_wincache.dll</filename> を PHP の拡張モジュール用フォルダにコピーします。
     このフォルダは、通常は PHP のバイナリファイルがあるフォルダと同じ場所にあって "ext"
     という名前です。たとえば <filename>C:\Program Files\PHP\ext</filename> のようになります。
    </simpara>
   </step>
   <step>
    <simpara>
     php.ini ファイルをテキストエディタで開きます。通常は PHP のバイナリファイルと同じ場所にあります。
     たとえば <filename>C:\Program Files\PHP\php.ini</filename> のようになります。
    </simpara>
   </step>
   <step>
    <simpara>
     php.ini ファイルの最後に
     <literal>extension = php_wincache.dll</literal>
     という行を追加します。
    </simpara>
   </step>
   <step>
    <simpara>
     <filename>php.ini</filename> ファイルを保存して終了します。
    </simpara>
   </step>
   <step>
    <simpara>
     IIS Application Pools for PHP をリサイクルして設定の変更を適用します。
     この拡張モジュールが有効になったことを確かめるには、
     <link linkend="function.phpinfo">phpinfo</link> 関数をコールする PHP のコードを書いた
     <filename>phpinfo.php</filename> というファイルをつくります。
    </simpara>
   </step>
   <step>
    <simpara>
     PHP を使う IIS ウェブサイトのルートフォルダに
     <filename>phpinfo.php</filename> を保存し、
     http://localhost/phpinfo.php を開きます。そして、表示されたウェブページから
     <literal>wincache</literal> というセクションを探します。
     拡張モジュールが有効になっていれば、
     <link linkend="function.phpinfo">phpinfo</link>
     の出力に WinCache の設定項目が含まれるはずです。
    </simpara>
   </step>
  </procedure>
  <note>
   <simpara>
    拡張モジュールが有効になっていることを確認し終えたら、忘れずに
    <filename>phpinfo.php</filename> をウェブサイトのルートフォルダから削除しておきましょう。
   </simpara>
  </note>
 </section>
 &reference.wincache.ini;
 
 <section xml:id="wincache.stats">
  <title>WinCache 統計スクリプト</title>
  <para>
   WinCache のインストールパッケージには
   <filename>wincache.php</filename> という PHP スクリプトが含まれています。
   これを使えば、キャッシュ情報や統計情報を取得することができます。
  </para>
  <para>
   WinCache 拡張モジュールのインストールを Microsoft Web Platform Installer
   で行った場合は、このスクリプトの場所は
   <filename>%SystemDrive%\Program Files\IIS\Windows Cache for PHP\</filename>
   となります。64 ビット版の Windows サーバー OS の場合は
   <filename>%SystemDrive%\Program Files (x86)\IIS\Windows Cache for PHP</filename>
   です。拡張モジュールを手動でインストールした場合は、
   インストールパッケージを展開した場所と同じフォルダに
   <filename>wincache.php</filename> があります。
  </para>
  <para>
   <filename>wincache.php</filename> を使うには、
   ウェブサイトのルートフォルダあるいはその配下のサブフォルダにこのファイルをコピーします。
   スクリプトを保護するために、このファイルをテキストエディタで開いて、定数
   <emphasis>USERNAME</emphasis> と <emphasis>PASSWORD</emphasis>
   の値を変更しましょう。サーバー上で何らかの IIS 認証を有効にしている場合は、
   コメントに書かれている指示に従います。
   <example>
    <title><filename>wincache.php</filename> 用の認証設定</title>
    <programlisting role="php">
<![CDATA[
<?php
/**
 * ======================== CONFIGURATION SETTINGS ==============================
 * If you do not want to use authentication for this page, set USE_AUTHENTICATION to 0.
 * If you use authentication then replace the default password.
 */
define('USE_AUTHENTICATION', 1);
define('USERNAME', 'wincache');
define('PASSWORD', 'wincache');

/**
 * The Basic PHP authentication will work only when IIS is configured to support
 * Anonymous Authentication' and nothing else. If IIS is configured to support/use
 * any other kind of authentication like Basic/Negotiate/Digest etc, this will not work.
 * In that case use the array below to define the names of users in your
 * domain/network/workgroup which you want to grant access to.
 */
$user_allowed = array('DOMAIN\user1', 'DOMAIN\user2', 'DOMAIN\user3');

/**
 * If the array contains string 'all', then all the users authenticated by IIS
 * will have access to the page. Uncomment the below line and comment above line
 * to grant access to all users who gets authenticated by IIS.
 */
/* $user_allowed = array('all'); */

/** ===================== END OF CONFIGURATION SETTINGS ========================== */
?>
]]>
    </programlisting>
   </example>
   <note>
    <simpara>
     組み込みの認証あるいはサーバーの認証機構を使って、常に
     <filename>wincache.php</filename> スクリプトを保護するようにしましょう。
     このスクリプトを保護せずに放置しておくと、アプリケーションやウェブサーバーを危険にさらすことになってしまいます。
    </simpara>
   </note>
  </para>
 </section>
  <section xml:id="wincache.sessionhandler">
  <title>WinCache セッションハンドラ</title>
  <para>
   WinCache セッションハンドラ (WinCache 1.1.0 以降で使用可能) を使うと、
   PHP のセッションデータを共有メモリ上のセッションキャッシュに格納できるようになります。
   デフォルトのファイル保存方式のかわりに共有メモリを使うことで、
   大量のデータをセッションで扱う PHP アプリケーションのパフォーマンスを向上させることができます。
   Wincache のセッションキャッシュはファイルをバックに置いた共有メモリなので、
   IIS アプリケーションプールをリサイクルするときにもセッションのデータが失われません。
  </para>
  <para>
   PHP で WinCache セッションハンドラを使うには、<filename>php.ini</filename> の
   <link linkend="ini.session.save-handler">session.save_handler</link> を <emphasis>wincache</emphasis>
   にします。デフォルトでは、Windows のテンポラリファイルと同じ場所にセッションデータを保存します。
   セッションファイルの場所を変えるには
   <link linkend="ini.session.save-path">session.save_path</link> ディレクティブを設定します。
   <example>
    <title>WinCache セッションハンドラの有効化</title>
    <programlisting role="php.ini">
<![CDATA[
session.save_handler = wincache
session.save_path = C:\inetpub\temp\session\
]]>
    </programlisting>
   </example>
  </para>
 </section>
 <section xml:id="wincache.reroutes">
  <title>WinCache 関数への切り替え</title>
  <para>
   <emphasis>注意:</emphasis> <link linkend="ini.wincache.rerouteini">wincache.rerouteini</link>
   は WinCache 1.3.7.0 で削除されました。かわりに、自動的な関数置き換え機能を利用します。
   <link linkend="ini.wincache.reroute_enabled">wincache.reroute_enabled</link> を参照ください。
  </para>
  <para>
   WinCache の関数切り替え機能 (WinCache 1.2.0 以降で使用可能で、WinCache 1.3.7.0 で削除されました) を使うと、
   その用途向けに最適化した同等の関数で組み込みの PHP 関数を置き換えることができます。
   WinCache 拡張モジュールには、PHP のファイル操作関数を Windows
   向けに最適化した実装が含まれています。PHP でネットワーク共有上のファイルにアクセスする必要がある場合などに、
   これを使うとアプリケーションのパフォーマンスを向上させることができるでしょう。
   最適化した実装が用意されている関数は、次のとおりです。
  </para>
  <itemizedlist spacing="compact">
   <listitem>
    <simpara>
     <link linkend="function.file-exists">file_exists</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.file-get-contents">file_get_contents</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.readfile">readfile</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.is-readable">is_readable</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.is-writable">is_writable</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.is-dir">is_dir</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.realpath">realpath</link>
    </simpara>
   </listitem>
      <listitem>
    <simpara>
     <link linkend="function.filesize">filesize</link>
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   WinCache の関数切り替え機能を使えるよう設定するには、WinCache のインストールパッケージに含まれている
   <filename>reroute.ini</filename> ファイルを使います。このファイルを
   <filename>php.ini</filename> があるディレクトリにコピーしましょう。
   それから <filename>php.ini</filename> に wincache.rerouteini
   の設定を追加し、ここに <filename>reroute.ini</filename> ファイルへの絶対パスあるいは相対パスを指定します。
   <example>
    <title>WinCache の関数切り替えの有効化</title>
    <programlisting role="php.ini">
<![CDATA[
wincache.rerouteini = C:\PHP\reroute.ini
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <simpara>
    WinCache の関数切り替え機能を使う場合は、ファイルキャッシュのサイズを増やすことを推奨します。
    このサイズは <link linkend="ini.wincache.fcachesize">wincache.fcachesize</link> を使って設定します。
   </simpara>
  </note>
  <para>
   <filename>reroute.ini</filename> ファイルには、PHP の関数とそれに対応する
   WinCache の関数のマッピングを記述します。
   ファイルの各行に、次の構文で関数のマッピングを定義します。
  </para>
  <simpara>
   <literal>&lt;PHP の関数名&gt;:[&lt;関数のパラメータの数&gt;]=&lt;wincache の関数名&gt;</literal>
  </simpara>
  <para>
   ファイルの例を以下に示します。この例では、PHP の関数 <function>file_get_contents</function>
   がコールされると、それが <function>wincache_file_get_contents</function> へのコールに置き換えられます。
   ただし、関数に渡されたパラメータが 2 個以下の場合に限ります。パラメータ数の指定が役立つのは、
   置き換え用の関数が元の関数のすべてのパラメータに対応しているわけではないという場合です。
   <example>
    <title>Reroute.ini ファイルの内容</title>
    <programlisting role="php.ini">
 <![CDATA[
[FunctionRerouteList]
file_exists=wincache_file_exists
file_get_contents:2=wincache_file_get_contents
readfile:2=wincache_readfile
is_readable=wincache_is_readable
is_writable=wincache_is_writable
is_writeable=wincache_is_writable
is_file=wincache_is_file
is_dir=wincache_is_dir
realpath=wincache_realpath
filesize=wincache_filesize
]]>
    </programlisting>
   </example>
  </para>
 </section>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

