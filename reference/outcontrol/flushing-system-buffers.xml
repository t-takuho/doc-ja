<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 7ad99aeafea66a1562f668aa3cb11dcc9d9cb951 Maintainer: mumumu Status: ready -->
<chapter xml:id="outcontrol.flushing-system-buffers" xmlns="http://docbook.org/ns/docbook">
 <title>システムバッファのフラッシュ</title>
 <para>
  PHP は、システムバッファをフラッシュ(内容を送信して破棄)
  する方法をふたつ提供します:
  <function>flush</function> と、
  <function>ob_implicit_flush</function> や
  &php.ini; 設定 <link linkend="ini.implicit-flush">implicit_flush</link>
  経由で暗黙のフラッシュを有効にする方法です。
 </para>

 <section>
  <title>出力をフラッシュする動作</title>
  <para>
   暗黙のフラッシュを無効にすると、
   PHP は <function>flush</function> をコールしたときか、
   スクリプトが終了したときにだけ出力をフラッシュします。
  </para>
  <para>
   暗黙のフラッシュを有効にすると、
   PHP は出力を生成するコードブロックが終了するたびに、
   フラッシュを実行しようとします。
   このコンテクストにおける出力は、以下に示す長さが 0 より大きなデータです:
   <itemizedlist xml:id="outputcontrol.what-is-output">
    <listitem>
     <simpara>
      <literal>&#60;?php ?&#62;</literal> タグの外側
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      ユーザが提供した変数や文字列を出力することを明確な目的とした言語構造や関数による出力。
      これにあてはまる言語構造や関数は、
      <function>echo</function>, <function>print</function>,
      <function>printf</function>, <function>var_dump</function>,
      <function>var_export</function>, <function>vprintf</function>
      です。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      実行中のスクリプトや PHP に関するデータ/情報を収集し、
      出力することを目的とした関数による出力。
      これにあてはまる関数は、
      <function>debug_print_backtrace</function>, <function>phpcredits</function>,
      <function>phpinfo</function>,
      <methodname>ReflectionExtension::info</methodname> です。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      捕捉されなかった例外や、処理されなかったエラーが発生したときに
      PHP が行う出力。
      (出力されるかどうかは、
      <link linkend="ini.display-errors">display_errors</link> と
      <link linkend="ini.error-reporting">error_reporting</link> の設定次第です)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>php://output</literal> に書き込まれたあらゆるデータ
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <note>
   <simpara>
    空文字列やヘッダの送信は、出力とはみなされないので、
    フラッシュは発生しません。
   </simpara>
  </note>
  <warning>
   <simpara>
    暗黙のフラッシュが有効な場合、制御文字
    (例: <literal>"\n"</literal>, <literal>"\r"</literal>,
    <literal>"\0"</literal>) もフラッシュを発生させます。
   </simpara>
  </warning>
 </section>

 <section>
  <title>制限事項</title>
  <para>
   この機能は、ユーザレベルの出力バッファをフラッシュできません。
   ユーザレベルの出力バッファを一緒にフラッシュするには、
   PHP が何らかの出力を生成するためにシステムバッファをフラッシュする前に、
   ユーザレベルの出力バッファをフラッシュしなければなりません。
  </para>
  <warning>
   <simpara>
    <function>flush</function> をコールしたり、
    暗黙のフラッシュを有効にすると、
    Web のコンテキスト中でヘッダを設定して送信するユーザレベルの出力バッファのハンドラ(例: <function>ob_gzhandler</function>) を邪魔する可能性があります。
    これは、これらのハンドラがヘッダを送信する前に、フラッシュの動作がヘッダを送信することが原因です。
   </simpara>
  </warning>
  <para>
   基礎となる ソフトウェア/ハードウェアによって実装されたバッファリングは
   PHP によって上書きできません。
   よって、PHP のバッファ制御関数を使う際にはこの点を考慮する必要があります。
   ウェブサーバー/ブラウザ/コンソールのバッファリング設定をチェックして使うことで、
   起こりうる問題を軽減することができます。
   Web のコンテキストで作業する場合、ウェブサーバーのバッファリング設定や
   スクリプトのバッファリングを一緒に調整することができます。
   PHP スクリプトのバッファリングを調整することで、
   さまざまなブラウザのバッファリング戦略を回避できます。
   行バッファリングを実装しているコンソールでは、
   改行文字を適切な場所に挿入してから出力をフラッシュします。
  </para>
 </section>

 <section>
  <title><acronym>SAPI</acronym> ごとのフラッシュの動作の違い</title>
  <para>
   フラッシュの機能は、<acronym>SAPI</acronym>
   ごとに少し違ったやり方で実装されていますが、
   以下の2つのカテゴリに分類できます:
   <itemizedlist>
    <listitem>
     <simpara>
      Web のコンテキストで使われる <acronym>SAPI</acronym> は、
      ヘッダをまずフラッシュし、その後に出力を続けます。
      <literal>Apache2Handler</literal>, <literal>CGI</literal>,
      <literal>FastCGI</literal>, <literal>FPM</literal>
      がこうした <acronym>SAPI</acronym> に該当します。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      出力をフラッシュするだけのその他の <acronym>SAPI</acronym>。
      たとえば <literal>CLI</literal> と <literal>embed</literal> が該当します。
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </section>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
