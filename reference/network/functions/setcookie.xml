<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1ad4e2d550953000e2441b663226300596962ef2 Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.setcookie" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>setcookie</refname>
  <refpurpose>クッキーを送信する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>setcookie</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>value</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>expires_or_options</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>path</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>domain</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>secure</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>httponly</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>PHP 7.3.0 以降で使える代替のシグネチャ(名前付き引数をサポートしていません):</para>
  <methodsynopsis>
   <type>bool</type><methodname>setcookie</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>value</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>setcookie</function> は、その他のヘッダ情報と共に
   送信するクッキーを定義します。 ほかのヘッダ情報と同様に、
   クッキーは、スクリプトによる他のあらゆる出力よりも<emphasis>前に</emphasis>
   送信される必要があります（これはHTTPプロトコルの制約です）。
   <literal>&lt;html&gt;</literal> や <literal>&lt;head&gt;</literal> タグはもちろん
   空白も含め、あらゆる出力よりも前にこの関数をコールするようにしなければなりません。
  </para>
  <para>
   一度クッキーが送信されると、次のページのロードからは
   <varname>$_COOKIE</varname> 配列によってクッキーにアクセスできます。
   クッキーの値は <varname>$_REQUEST</varname>
   配列からもアクセスできるかもしれません。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <function>setcookie</function> の各パラメータがどのように作用するのかを知るには
   <link xlink:href="&url.rfc;6265">RFC 6265</link> を参照ください。
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       クッキーの名前。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       クッキーの値。この値はクライアントのコンピュータに保存されますので、
       重要な情報は格納しないでください。
       <parameter>name</parameter> が <literal>'cookiename'</literal> だとすると、
       その値は <varname>$_COOKIE['cookiename']</varname> で取得することができます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>expires_or_options</parameter></term>
     <listitem>
      <para>
       クッキーの有効期限。これは Unix タイムスタンプなので
       Epoch（1970 年 1 月 1 日）からの経過秒数となります。
       この値を設定するひとつの方法として、
       <function>time</function> が返した値に、
       期限としたい必要な秒数を加算することが考えられます。
       たとえば、<literal>time()+60*60*24*30</literal>
       はクッキーの有効期限を 30 日後にセットします。
       別のやり方として、<function>mktime</function> を使うことも考えられます。
       この値に <literal>0</literal> を設定したり省略したりした場合は、
       クッキーはセッションの最後(つまりブラウザを閉じるとき) が有効期限となります。
      </para>
      <para>
       <note>
        <para>
         <parameter>expires_or_options</parameter> パラメータには、<literal>Wdy, DD-Mon-YYYY
         HH:MM:SS GMT</literal> といった形式ではなく Unix
         タイムスタンプを渡していることにお気づきでしょうか。
         これは、PHP の内部で自動的に変換を行っているからです。
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>path</parameter></term>
     <listitem>
      <para>
       サーバー上での、クッキーを有効としたいパス
       <literal>'/'</literal> をセットすると、クッキーは
       <parameter>domain</parameter> 配下の全てで有効となります。
       <literal>'/foo/'</literal> をセットすると、クッキーは
       <literal>/foo/</literal> ディレクトリとそのサブディレクトリ配下
       (例えば <literal>/foo/bar/</literal>) で有効となります。
       デフォルト値は、クッキーがセットされたときのカレントディレクトリです。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>domain</parameter></term>
     <listitem>
      <para>
       クッキーが有効な (サブ) ドメイン。これを
       <literal>'www.example.com'</literal> などのサブドメインに設定すると、
       <literal>www</literal> サブドメインおよびそれ自身のすべてのサブドメイン (w2.www.example.com など) でクッキーが使えるようになります。
       サブドメインを含むドメイン全体でクッキーを有効にしたければ、そのドメイン自体
       (この場合は <literal>'example.com'</literal>) を設定します。
      </para>
      <para>
       古いブラウザの中には、非推奨になった
       <link xlink:href="&url.rfc;2109">RFC 2109</link> を実装しているものが未だに残っているかもしれません。
       そのようなブラウザでは、すべてのサブドメインにマッチさせるためには先頭に
       <literal>.</literal> が必要となります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>secure</parameter></term>
     <listitem>
      <para>
       クライアントからのセキュアな HTTPS 接続の場合にのみクッキーが送信されるようにします。
       &true; を設定すると、セキュアな接続が存在する場合にのみクッキーを設定します。
       サーバー側では、このようにセキュアな接続の場合にのみクッキーを送信するという処理は
       プログラマの責任で行うことになります
       (たとえば <varname>$_SERVER["HTTPS"]</varname> の内容を使用します)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>httponly</parameter></term>
     <listitem>
      <para>
       &true; を設定すると、HTTP を通してのみクッキーにアクセスできるようになります。
       つまり、JavaScript のようなスクリプト言語からはアクセスできなくなるということです。
       この設定を使用すると、XSS 攻撃によって ID を盗まれる危険性を減らせる
       (が、すべてのブラウザがこの設定をサポートしているというわけではありません)
       と言われていますが、これはしばしば議論の対象となります。
       &true; あるいは &false; で指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       <literal>expires</literal>, <literal>path</literal>, <literal>domain</literal>,
       <literal>secure</literal>, <literal>httponly</literal> および <literal>samesite</literal>
       のうちから、任意のキーを設定可能な連想配列(<type>array</type>)です。
       これら以外のキーが存在する場合、<constant>E_WARNING</constant> レベルの警告が発生します。
       値については、キーと同じ名前のパラメーターで説明した意味と同じです。
       <literal>samesite</literal> 要素の値は、
       <literal>None</literal>, <literal>Lax</literal> または <literal>Strict</literal> です。
       上記で許されているオプションのうち、与えられなかったものについては、
       デフォルト値は明示的にパラメータを与えた場合のデフォルト値と同じです。
       <literal>samesite</literal> 要素が省略された場合は、SameSite クッキー属性は設定されません。
      </para>
      <para>
       <note>
        <para>
         上のリストにないキーをクッキーの属性に設定する場合、
         <function>header</function> を使います。
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   もしもこの関数をコールする前に何らかの出力がある場合には、
   <function>setcookie</function> は失敗し &false; を返します。
   <function>setcookie</function> が正常に実行されると、&true; を返します。
   この関数では、ユーザーがクッキーを受け入れたかどうかを判断することはできません。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.2.0</entry>
       <entry>
        Cookie の日付フォーマットが <literal>'D, d M Y H:i:s \G\M\T'</literal> になりました。
        これより前のバージョンでは <literal>'D, d-M-Y H:i:s T'</literal> でした。
       </entry>
      </row>
      <row>
       <entry>7.3.0</entry>
       <entry>
        <parameter>options</parameter> 配列をサポートする追加のシグネチャが追加されました。
        このシグネチャは、SameSite クッキー属性の設定もサポートしています。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   以下はクッキーを送信する例です。
   <example>
    <title><function>setcookie</function> での送信の例</title>
    <programlisting role="php">
     <![CDATA[
<?php

$value = 'something from somewhere';

setcookie("TestCookie", $value);
setcookie("TestCookie", $value, time()+3600);  /* 有効期限は一時間です */
setcookie("TestCookie", $value, time()+3600, "/~rasmus/", "example.com", true);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   クッキーの value の部分は、クッキーの送信を行う際に自動的に
   URL エンコードされ、またクッキーを受信した際は、自動的にデコード
   されてクッキー名と同じ名前の変数に格納されることに注意してください。
   この挙動が気に入らない場合、
   代わりに <function>setrawcookie</function> を使ってください。
   スクリプト内部で TestCookie の内容を見たい場合は、
   以下のいずれかの例を使用します。
  </para>
  <para>
   <informalexample>
    <programlisting role="php">
     <![CDATA[
<?php
// 個々のクッキーを表示します
echo $_COOKIE["TestCookie"];

// デバッグ／テスト用には、全てのクッキーを見る方法があります。
print_r($_COOKIE);
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   <example>
    <title><function>setcookie</function> による削除の例</title>
    <para>
     クッキーを削除する場合には、ブラウザの削除機構を起動するために
     必ず有効期限を過去に設定する必要があります。
     次に、先ほどの例で送信したクッキーを削除する例を示します。
    </para>
    <programlisting role="php">
     <![CDATA[
<?php
// 有効期限を一時間前に設定します
setcookie("TestCookie", "", time() - 3600);
setcookie("TestCookie", "", time() - 3600, "/~rasmus/", "example.com", 1);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>setcookie</function> と配列</title>
    <para>
     クッキー名で配列を記述することにより、クッキーの配列を設定することも可能です。
     これにより配列要素と同数のクッキーを設定されますが、
     クッキーがスクリプトに受信された際に、
     値はクッキー名を有する配列に置きかえられます。
    </para>
    <programlisting role="php">
     <![CDATA[
<?php
// クッキーを設定します
setcookie("cookie[three]", "cookiethree");
setcookie("cookie[two]", "cookietwo");
setcookie("cookie[one]", "cookieone");

// ページを再読み込みした後に、表示します
if (isset($_COOKIE['cookie'])) {
    foreach ($_COOKIE['cookie'] as $name => $value) {
        $name = htmlspecialchars($name);
        $value = htmlspecialchars($value);
        echo "$name : $value <br />\n";
    }
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
     <![CDATA[
three : cookiethree
two : cookietwo
one : cookieone
]]>
    </screen>
   </example>
   <note>
    <simpara>
     <literal>[</literal> や <literal>]</literal> のような区切り文字を
     Cookie の名前の一部として使ってしまうと、RFC 6265 section 4 違反になります。
     しかし、RFC 6265, section 5 によると、
     ユーザーエージェントがこうした区切り文字をサポートしていることが想定されています。
    </simpara>
   </note>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    この関数をコールする前でも出力できるように、
    スクリプトの全ての出力をサーバー内にバッファリングさせることができます。
    そのためには、<function>ob_start</function> や <function>ob_end_flush</function>
    を使用するか、あるいは &php.ini; やサーバー設定ファイルの <literal>output_buffering</literal>
    を使用します。
   </para>
  </note>
  <para>
   陥りやすい失敗:
   <itemizedlist>
    <listitem>
     <simpara>
      クッキーは、クッキーを有効にするために次にページをロードするまで
      アクセスすることができません。クッキーが正常にセットされたか
      テストするために、クッキーの有効期限が切れる前に次のページを
      ロードしてクッキーをチェックしてください。
      有効期限は <parameter>expires_or_options</parameter> 引数でセットされます。
      クッキーの利用についてデバッグするのに良い方法は
      <literal>print_r($_COOKIE);</literal> をコールすることです。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      クッキーは設定されたものと同じパラメータで削除する必要があります。
      <parameter>value</parameter> が空文字列で、その他の全ての引数が前に <function>setcookie</function>
      をコールした時と同じである場合に、指定された名前のクッキーが
      リモートクライアント上から削除されます。
      内部的な動作として、これは値を 'deleted' に変更した上で有効期限を
      過去に設定しています。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      クッキーの値として &false; を設定すると、クッキーを削除しようとします。
      そのため、boolean 値は使用できません。その代わりとして、
      &false; ではなく <emphasis>0</emphasis>、そして &true;
      ではなく <emphasis>1</emphasis> を使用します。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      クッキー名で配列を記述することにより、
      クッキーの配列を設定することも可能ですが、複数のクッキー
      がユーザーのシステム上に保存されることになります。
      <function>explode</function> を使用して
      ひとつのクッキー上に複数の名前と値をセットすることも
      考慮してください。<function>serialize</function>
      の使用はセキュリティーホールになり得るため、
      この目的のために使用することはお勧めしません。
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <simpara>
   <function>setcookie</function> を複数回コールした場合は、コールした順番で実行されます。
  </simpara>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>header</function></member>
    <member><function>setrawcookie</function></member>
    <member><link linkend="features.cookies">クッキー</link></member>
    <member><link xlink:href="&url.rfc;6265">RFC 6265</link></member>
    <member><link xlink:href="&url.rfc;2109">RFC 2109</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
