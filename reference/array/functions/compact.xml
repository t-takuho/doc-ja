<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d58ee8eaaa7f716c51f66f5f1058ab3c42376d98 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xml:id="function.compact" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>compact</refname>
  <refpurpose>変数名とその値から配列を作成する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>compact</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>var_name</parameter></methodparam>
   <methodparam rep="repeat"><type class="union"><type>array</type><type>string</type></type><parameter>var_names</parameter></methodparam>
  </methodsynopsis>
  <para>
   変数名とその値から配列を作成します。
  </para>
  <para>
   各引数について、<function>compact</function>
   は現在の <link linkend="features.gc.refcounting-basics">シンボルテーブル</link> においてその名前を有する変数を探し、
   変数名がキー、変数の値がそのキーに関する値となるように追加します。
   端的に言うと、<function>extract</function> の逆の動作をします。
  </para>
  <note>
   <para>
    PHP 7.3 より前のバージョンでは、設定されていない全ての文字列は、単にスキップされます。
   </para>
  </note> 
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var_name</parameter></term>
     <term><parameter>var_names</parameter></term>
     <listitem>
      <para>
       <function>compact</function> がとるパラメータの数は可変です。
       各パラメータは、変数名を値とする文字列か、
       変数名の配列のどちらかとすることができます。
       配列は、変数名を値とする別の配列を持つことができます。
       <function>compact</function>はこれを再帰的に処理します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   追加された全ての変数を値とする出力配列を返します。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>compact</function> は、与えられた文字列が示す変数が未定義の場合、
   <constant>E_WARNING</constant> レベルのエラーを発行します。
  </para>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>7.3.0</entry>
      <entry>
       <function>compact</function> は、与えられた文字列が示す変数が未定義の場合、
       <constant>E_NOTICE</constant> レベルのエラーを発行するようになりました。
       以前のバージョンでは、設定されていない全ての文字列は、単にスキップされます。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>compact</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php

$city  = "San Francisco";
$state = "CA";
$event = "SIGGRAPH";

$location_vars = array("city", "state");

$result = compact("event", $location_vars);
print_r($result);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [event] => SIGGRAPH
    [city] => San Francisco
    [state] => CA
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>分かった!</title>
   <para>
    <link linkend="language.variables.variable">可変変数</link> は関数内で
    PHP の <link linkend="language.variables.superglobals">
    スーパーグローバル配列</link> と併用してはいけませんので、
    スーパーグローバル配列を <function>compact</function> に渡してはいけません。
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>extract</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
