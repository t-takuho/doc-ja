<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 71692b6f4cace8dca72a18ccd80d4cd7305e5d4e Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="dateinterval.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DateInterval::__construct</refname>
  <refpurpose>新しい DateInterval オブジェクトを作成する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis role="DateInterval">
   <modifier>public</modifier> <methodname>DateInterval::__construct</methodname>
   <methodparam><type>string</type><parameter>duration</parameter></methodparam>
  </constructorsynopsis>
  <para>
   新しい DateInterval オブジェクトを作成します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>duration</parameter></term>
     <listitem>
      <para>
       間隔。
      </para>
      <para>
       最初は <literal>P</literal> から始まります。これは
       <quote>period</quote> を表します。
       間隔の単位は、整数値の後に間隔指示子をつけて表します。
       時間の要素を含む場合は、時間部分の前に文字
       <literal>T</literal> を入れます。
      </para>
      <para>
       <table>
        <title>
         <parameter>duration</parameter> の間隔指示子
        </title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>間隔指示子</entry>
           <entry>説明</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><literal>Y</literal></entry>
           <entry>年</entry>
          </row>
          <row>
           <entry><literal>M</literal></entry>
           <entry>月</entry>
          </row>
          <row>
           <entry><literal>D</literal></entry>
           <entry>日</entry>
          </row>
          <row>
           <entry><literal>W</literal></entry>
           <entry>
            週。日付に変換されます。
            PHP 8.0.0 より前のバージョンでは、
            <literal>D</literal> と組み合わせて使えませんでした。
           </entry>
          </row>
          <row>
           <entry><literal>H</literal></entry>
           <entry>時間</entry>
          </row>
          <row>
           <entry><literal>M</literal></entry>
           <entry>分</entry>
          </row>
          <row>
           <entry><literal>S</literal></entry>
           <entry>秒</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
      <para>
       いくつか簡単な例を示しましょう。
       <literal>P2D</literal> は 2 日、
       <literal>PT2S</literal> は 2 秒、そして
       <literal>P6YT5M</literal> は 6 年と 5 分を表します。
      </para>
      <note>
       <para>
        複数の単位を指定するときは、
        大きな単位を左、小さな単位を右の順に書かなければなりません。
        つまり年は月より先、月は日より先、日は分より先などとなります。
        1 年と 4 日を表すのは
        <literal>P1Y4D</literal> であり、<literal>P4D1Y</literal> ではありません。
       </para>
      </note>
      <para>
       日付と時刻で間隔を指定することもできます。
       1 年と 4 日をこの方式で表すと
       <literal>P0001-00-04T00:00:00</literal> のようになります。
       しかし、この方式では繰り返し単位以上の値を指定することはできません
       (たとえば <literal>25</literal> 時間などとは指定できません)。
      </para>
      <para>
       これらのフォーマットは <link
        xlink:href="&url.iso-8601.duration;">ISO 8601 duration
       specification</link> に基づくものです。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <parameter>duration</parameter> が間隔の値としてパースできない場合、
   <classname>DateMalformedIntervalStringException</classname> がスローされます。
   PHP 8.3 より前のバージョンでは、<exceptionname>Exception</exceptionname> がスローされていました。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.3.0</entry>
      <entry>
       <exceptionname>Exception</exceptionname> の代わりに、
       <exceptionname>DateMalformedIntervalStringException</exceptionname>
       がスローされるようになりました。
      </entry>
     </row>
     <row>
      <entry>8.2.0</entry>
      <entry>
       アクセス可能なプロパティは
       <literal>y</literal> から <literal>f</literal>,
       <literal>invert</literal>,
       <literal>days</literal> だけになりました。
       新しい boolean プロパティ
       <literal>from_string</literal> もアクセス可能です。
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <literal>W</literal> が、<literal>D</literal> と組み合わせて使えるようになりました。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><classname>DateInterval</classname>
    オブジェクトを作成して使う例</title>
    <programlisting role="php">
<![CDATA[
<?php
// Create a specific date
$someDate = \DateTime::createFromFormat("Y-m-d H:i", "2022-08-25 14:18");

// Create interval
$interval = new \DateInterval("P7D");

// Add interval
$someDate->add($interval);

// Convert interval to string
echo $interval->format("%d");
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
7
    </screen>
   </example>
  </para>
 
  <para>
   <example>
    <title><classname>DateInterval</classname> の例</title>
    <programlisting role="php">
<![CDATA[
<?php

$interval = new DateInterval('P1W2D');
var_dump($interval);

?>
]]>
    </programlisting>
    &example.outputs.82;
    <screen role="php">
<![CDATA[
object(DateInterval)#1 (10) {
  ["y"]=>
  int(0)
  ["m"]=>
  int(0)
  ["d"]=>
  int(9)
  ["h"]=>
  int(0)
  ["i"]=>
  int(0)
  ["s"]=>
  int(0)
  ["f"]=>
  float(0)
  ["invert"]=>
  int(0)
  ["days"]=>
  bool(false)
  ["from_string"]=>
  bool(false)
}
]]>
    </screen>
    &example.outputs.8;
    <screen role="php">
<![CDATA[
object(DateInterval)#1 (16) {
  ["y"]=>
  int(0)
  ["m"]=>
  int(0)
  ["d"]=>
  int(9)
  ["h"]=>
  int(0)
  ["i"]=>
  int(0)
  ["s"]=>
  int(0)
  ["f"]=>
  float(0)
  ["weekday"]=>
  int(0)
  ["weekday_behavior"]=>
  int(0)
  ["first_last_day_of"]=>
  int(0)
  ["invert"]=>
  int(0)
  ["days"]=>
  bool(false)
  ["special_type"]=>
  int(0)
  ["special_amount"]=>
  int(0)
  ["have_weekday_relative"]=>
  int(0)
  ["have_special_relative"]=>
  int(0)
}
]]>
    </screen>
    &example.outputs.7;
    <screen role="php">
     <![CDATA[
object(DateInterval)#1 (16) {
  ["y"]=>
  int(0)
  ["m"]=>
  int(0)
  ["d"]=>
  int(2)
  ["h"]=>
  int(0)
  ["i"]=>
  int(0)
  ["s"]=>
  int(0)
  ["f"]=>
  float(0)
  ["weekday"]=>
  int(0)
  ["weekday_behavior"]=>
  int(0)
  ["first_last_day_of"]=>
  int(0)
  ["invert"]=>
  int(0)
  ["days"]=>
  bool(false)
  ["special_type"]=>
  int(0)
  ["special_amount"]=>
  int(0)
  ["have_weekday_relative"]=>
  int(0)
  ["have_special_relative"]=>
  int(0)
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>DateInterval::format</function></member>
    <member><function>DateTime::add</function></member>
    <member><function>DateTime::sub</function></member>
    <member><function>DateTime::diff</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
