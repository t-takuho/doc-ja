<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9e534c19272a88cf031748348d54143f0e3ea413 Maintainer: mumumu Status: ready -->
<section xml:id="memcached.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>Memcached &ConfigureOptions;</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="ini.memcached.sess-locking">memcached.sess_locking</link></entry>
      <entry>On</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 0.1.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-consistent-hash">memcached.sess_consistent_hash</link></entry>
      <entry>On</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 2.1.0 以降で利用可能です。memcached 3.0.0 以降は、デフォルト値は <literal>On</literal> です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-binary">memcached.sess_binary</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 2.0.0 以降で利用可能です。memcached 3.0.0 以降は、<literal>memcached.sess_binary_protocol</literal> に置き換えられました。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait">memcached.sess_lock_wait</link></entry>
      <entry>150000</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 0.1.0 以降で利用可能ですが、memcached 3.0.0 以降では削除されています。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-prefix">memcached.sess_prefix</link></entry>
      <entry>memc.sess.key.</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 0.1.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-number-of-replicas">memcached.sess_number_of_replicas</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 2.1.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-randomize-replica-read">memcached.sess_randomize_replica_read</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 2.1.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-remove-failed">memcached.sess_remove_failed</link></entry>
      <entry>On</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 2.1.0 以降で利用可能です。memcached 3.0.0 以降は、<literal>memcached.sess_remove_failed_servers</literal> に置き換えられました。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-type">memcached.compression_type</link></entry>
      <entry>fastlz</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 0.1.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-factor">memcached.compression_factor</link></entry>
      <entry>1.3</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 0.1.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-threshold">memcached.compression_threshold</link></entry>
      <entry>2000</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 0.1.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.serializer">memcached.serializer</link></entry>
      <entry>igbinary</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 0.1.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.use-sasl">memcached.use_sasl</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 2.2.0 以降で利用可能ですが、memcached 3.0.0 以降では削除されています。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-binary-protocol">memcached.default_binary_protocol</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 3.0.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-connect-timeout">memcached.default_connect_timeout</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 3.0.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-consistent-hash">memcached.default_consistent_hash</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 3.0.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-binary-protocol">memcached.sess_binary_protocol</link></entry>
      <entry>On</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 3.0.0 以降で利用可能です。<literal>memcached.sess_binary</literal> を置き換えるものです。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-connect-timeout">memcached.sess_connect_timeout</link></entry>
       <entry>1000</entry>
       <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 2.2.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-consistent-hash-type">memcached.sess_consistent_hash_type</link></entry>
      <entry>ketama</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 3.1.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-expire">memcached.sess_lock_expire</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 2.2.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-retries">memcached.sess_lock_retries</link></entry>
      <entry>5</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 3.0.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait-max">memcached.sess_lock_wait_max</link></entry>
      <entry>150</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 3.0.0 以降で利用可能です。デフォルト値は memcached 3.1.0 以降は <literal>150</literal> です (それより前のバージョンでは <literal>2000</literal> でした)。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait-min">memcached.sess_lock_wait_min</link></entry>
      <entry>150</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 3.0.0 以降で利用可能です。デフォルト値は memcached 3.1.0 以降は <literal>150</literal> です (それより前のバージョンでは <literal>1000</literal> でした)。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-persistent">memcached.sess_persistent</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 3.0.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-remove-failed-servers">memcached.sess_remove_failed_servers</link></entry>
      <entry>Off</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 3.0.0 以降で利用可能です。<literal>memcached.sess_remove_failed</literal> を置き換えるものです。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-server-failure-limit">memcached.sess_server_failure_limit</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 3.0.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-sasl-password">memcached.sess_sasl_password</link></entry>
      <entry>null</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 2.2.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-sasl-username">memcached.sess_sasl_username</link></entry>
      <entry>null</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>memcached 2.2.0 以降で利用可能です。</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.store-retry-count">memcached.store_retry_count</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>
       memcached 2.2.0 以降で利用可能です。
       memcached 3.2.0 以降では、デフォルト値は <literal>0</literal> です。
       (それより前のバージョンでは、<literal>2</literal> でした)
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.memcached.sess-locking">
     <term>
      <parameter>memcached.sess_locking</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       セッション単位のロックを使う。設定値として <literal>On</literal>, <literal>Off</literal> が使えます。デフォルトは <literal>On</literal> です。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="ini.memcached.sess-consistent-hash">
     <term>
      <parameter>memcached.sess_consistent_hash</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       <literal>On</literal> にすると、セッション管理に コンシステント・ハッシュ法 (libketama) を使います。
       コンシステント・ハッシュ法を使うと、既存のキーに煩わされることなく
       ノードを追加したり削除したりできます。デフォルトは <literal>On</literal> です。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="ini.memcached.sess-binary">
     <term>
      <parameter>memcached.sess_binary</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       セッション管理にmemcachedのバイナリプロトコルを使います。
       Libmemcached のレプリカはこのバイナリモードが有効になっている場合にのみ動作します。
       デフォルトは <literal>Off</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-wait">
     <term>
      <parameter>memcached.sess_lock_wait</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       セッションデータを書き込むときの spin lock の待ち時間をマイクロ秒単位で指定します。
       この値を設定するときは注意してください。数値の値が設定できますが、
       <literal>0</literal> はデフォルトの値を使うと解釈されます。負の値を設定するとロックを掛けようと試みる
       回数が減ってしまいます。デフォルトは <literal>150000</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-prefix">
     <term>
      <parameter>memcached.sess_prefix</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       セッション管理に使うキーのプレフィックスです。
       219バイト以下の文字列が使えます。デフォルトの値は <literal>memc.sess.key</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-number-of-replicas">
     <term>
      <parameter>memcached.sess_number_of_replicas</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       データを書き込む、 追加の memcached サーバーの数を指定します。
       これは、libmemcached が "poor man's HA" と呼んでいるものです。
       この値が0より大きく、<literal>sess_remove_failed_servers</literal> が 有効な場合、
       memcached サーバーがダウンした時にセッションはレプリカを使って継続されます。
       しかし、ダウンした memcached サーバーが再び復帰した場合は、
       セッションは古いデータを持つセッションを読みとる場合もありますし、
       データを全く読み取れない場合もあります。デフォルト値は <literal>0</literal> です。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="ini.memcached.sess-randomize-replica-read">
     <term>
      <parameter>memcached.sess_randomize_replica_read</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       複数のサーバーのレプリカからセッションデータを読み取る際、読み取りを始める最初のサーバーをランダムに選ぶかを指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-remove-failed">
     <term>
      <parameter>memcached.sess_remove_failed</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       通信に失敗した memcached サーバーを自動的にサーバーリストから外すかを指定します。       
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.compression-type">
     <term>
      <parameter>memcached.compression_type</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       圧縮のタイプを指定します。<literal>fastlz</literal>, <literal>zlib</literal> が指定できます。デフォルトは <literal>fastlz</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.compression-factor">
     <term>
      <parameter>memcached.compression_factor</parameter>
      <type>float</type>
     </term>
     <listitem>
      <para>
       圧縮係数。圧縮後のサイズが圧縮係数の限界値を超えていた場合にだけ値を圧縮して保存します。
       <literal>元のサイズ &gt; 圧縮後のサイズ * 圧縮係数</literal>の場合にだけ値を圧縮して保存します。
       デフォルト値は <literal>1.3</literal> (23%強の圧縮率) です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.compression-threshold">
     <term>
      <parameter>memcached.compression_threshold</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       圧縮のしきい値。このしきい値を下回るシリアライズ済みの値は圧縮しません。
       デフォルトは <literal>2000</literal> バイトです。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.serializer">
     <term>
      <parameter>memcached.serializer</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       新しい memcached オブジェクトのデフォルトのシリアライザを設定します。設定値として <literal>php</literal>, <literal>igbinary</literal>, <literal>json</literal>, <literal>json_array</literal>, <literal>msgpack</literal> が使えます。
      </para>
      <variablelist>
       <varlistentry>
        <term>json</term>
        <listitem>
         <para>
          標準的な JSON を使います。このシリアライザは高速でコンパクトですが、UTF-8 でエンコードされたデータでしか動作しませんし、完全なシリアライズを実装していません。詳細は JSON拡張モジュール を参照ください。
          memcached 0.2.0 以降で利用可能です。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>json_array</term>
        <listitem>
         <para>
          <literal>json</literal> と同じですが、シリアライズしたデータを配列に入れます。
          memcached 2.0.0 以降で利用可能です。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>php</term>
        <listitem>
         <para>
          標準的なPHPのシリアライザです。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>igbinary</term>
        <listitem>
         <para>
          バイナリデータのシリアライザです。
          memcached 0.1.4 以降で利用可能です。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>msgpack</term>
        <listitem>
         <para>
          言語に依存しない、バイナリデータのシリアライザです。
          memcached 2.2.0 以降で利用可能です。
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
      <para>
       デフォルトは 利用可能な場合 <literal>igbinary</literal> です。
       igbinary が利用できない場合は <literal>msgpack</literal> が(利用可能な場合のみ) デフォルトになります。
       いずれも利用できない場合は、<literal>php</literal> がデフォルトになります。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry xml:id="ini.memcached.use-sasl">
     <term>
      <parameter>memcached.use_sasl</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       接続時に SASL認証 を使います。設定値として <literal>On</literal>, <literal>Off</literal> が使えます。デフォルトは <literal>Off</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.default-binary-protocol">
     <term>
      <parameter>memcached.default_binary_protocol</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       新しい接続で使う、デフォルトの memcached プロトコルを設定します
       (セッションで使う memcached プロトコルを設定するには、
       <literal>memcached.sess_binary_protocol</literal> を代わりに使って下さい)。

       <literal>On</literal> にすると、memcached バイナリプロトコルをデフォルトで使います。
       <literal>Off</literal> にすると、memcached テキストプロトコルを使います。
       デフォルトは <literal>Off</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.default-connect-timeout">
     <term>
      <parameter>memcached.default_connect_timeout</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       新しい接続で使う、デフォルトの memcached の接続タイムアウト値を設定します
       (セッションで使う memcached の接続タイムアウト値を設定するには、
       <literal>memcached.sess_connect_timeout</literal> を代わりに使って下さい)。

       ノンブロッキングモードの場合、この値は
       ソケット接続中のタイムアウトの値をミリ秒単位で変更します。
       <literal>-1</literal> を指定すると、タイムアウトしません。
       <literal>0</literal> を指定すると、memcached ライブラリのデフォルトの接続タイムアウト値を使います。
       デフォルトは <literal>0</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.default-consistent-hash">
     <term>
      <parameter>memcached.default_consistent_hash</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       新しい接続で使う、デフォルトの コンシステント・ハッシュ法を指定します
       (セッションで使う コンシステント・ハッシュ法 を設定するには、
       <literal>memcached.sess_consistent_hash</literal> を代わりに使って下さい)。

       <literal>On</literal> にすると、セッション管理に コンシステント・ハッシュ法 (libketama) を使います。
       コンシステント・ハッシュ法を使うと、既存のキーに煩わされることなく
       キャッシュノードを追加したり削除したりできます。デフォルトは <literal>Off</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-binary-protocol">
     <term>
      <parameter>memcached.sess_binary_protocol</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       memcached でセッション管理を行う場合に、
       memcached text プロトコルではなく memcached バイナリプロトコル を使うように指定します。
       これは、libmemcached レプリカのバイナリモードが有効になっている場合にのみ有効です。
       バイナリプロトコルが無効な場合にのみ動作するプロキシ(たとえば、twemproxy) もあります。
       デフォルト値は libmemcached 1.0.18 以降は <literal>On</literal>  です。
       それより前のバージョンでは <literal>Off</literal> になっています。
      </para>
      <note>
       <simpara>
        php-memcached の以前のバージョンでは、この設定は
        <literal>memcached.sess_binary</literal> と呼ばれていました。
       </simpara>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-connect-timeout">
     <term>
      <parameter>memcached.sess_connect_timeout</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       memcached の接続タイムアウト値を指定します。

       ノンブロッキングモードの場合、この値は
       ソケット接続中のタイムアウトの値をミリ秒単位で変更します。
       <literal>-1</literal> を指定すると、タイムアウトしません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-consistent-hash-type">
     <term>
      <parameter>memcached.sess_consistent_hash_type</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Memcached のセッション管理で使う、コンシステント・ハッシュ法を指定します。
       <literal>ketama</literal> を指定すると、セッション管理にコンシステント・ハッシュ(libketama) を使います。
       これは php-memcached 3.x のデフォルトです。
       <literal>ketama_weighted</literal> を指定すると、重み付きのコンシステント・ハッシュ(libketama)
       をセッション管理に使います。
       デフォルトは <literal>ketama</literal> です。
       php-memcached 3.0 より前のバージョンでは、デフォルトは <literal>ketama_weighted</literal> でした。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-expire">
     <term>
      <parameter>memcached.sess_lock_expire</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       ロックが解放されるまでの時間を秒単位で指定します。
       <literal>0</literal> を指定すると、デフォルトの動作になります。
       つまり、PHP の <literal>max_execution_time</literal> の値を使います。
       デフォルト値は <literal>0</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-retries">
     <term>
      <parameter>memcached.sess_lock_retries</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       セッションのロックを取得するためのリトライ回数を指定します。
       この値には、最初の試行は含まれません。
       デフォルト値は <literal>5</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-wait-max">
     <term>
      <parameter>memcached.sess_lock_wait_max</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       セッションのロック取得を試みる際に、
       それぞれの試行の間に待つ最大の時間をミリ秒単位で指定します。
       デフォルト値は <literal>150</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-lock-wait-min">
     <term>
      <parameter>memcached.sess_lock_wait_min</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       セッションのロック取得を試みる際に、
       それぞれの試行の間に待つ最小の時間をミリ秒単位で指定します。
       ロック取得のリトライを行うたびに、<literal>memcached.sess_lock_wait_max</literal> に達するまで、
       現在のリトライ時間を2倍して待ちます。
       その後は、<literal>memcached.sess_lock_wait_max</literal> の間待ちます。
       デフォルト値は <literal>150</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-persistent">
     <term>
      <parameter>memcached.sess_persistent</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       スクリプトの実行が終了した後、<literal>session.save_path</literal> に対応する
       memcached 接続を再利用するかどうかを指定します。
       特定の設定 (たとえば SASL 設定や, sess_binary_protocol) がリクエスト間で上書きされる場合は、
       この設定を使ってはいけません。
       デフォルト値は <literal>Off</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-remove-failed-servers">
     <term>
      <parameter>memcached.sess_remove_failed_servers</parameter>
      <type>bool</type>
     </term>
     <listitem>
      <para>
       ダウンした memcahced サーバーを自動的に削除する機能を有効にします。
       デフォルト値は <literal>Off</literal> です。
      <note>
       <simpara>
        前のバージョンでは、この設定は <literal>memcached.sess_remove_failed</literal> と呼ばれていました。
       </simpara>
      </note>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-server-failure-limit">
     <term>
      <parameter>memcached.sess_server_failure_limit</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       指定した回数接続が失敗した場合に、サーバーを削除する機能を有効にします。
       デフォルト値は <literal>0</literal> です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-sasl-password">
     <term>
      <parameter>memcached.sess_sasl_password</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       セッションの SASL パスワードを指定します。
       SASL を有効にするには、ユーザー名とパスワードを両方指定する必要があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.sess-sasl-username">
     <term>
      <parameter>memcached.sess_sasl_username</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       セッションの SASL ユーザ名を指定します。
       SASL を有効にするには、ユーザー名とパスワードを両方指定する必要があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.memcached.store-retry-count">
     <term>
      <parameter>memcached.store_retry_count</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       store コマンドが失敗した場合に、行うリトライの回数を指定します。
       この仕組みを使うと、
       複数サーバー構成で set/increment/decrement/setMulti 操作が失敗した場合に、
       セカンダリサーバーへ透過的なフェイルオーバーを行うことが出来ます。
       デフォルト値は <literal>2</literal> です。
      </para>
     </listitem>
    </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
