<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 14c33cf174c921e21b82a0ed262268c087137bdb Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi,mumumu -->
<refentry xml:id="function.mb-ereg-replace-callback" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mb_ereg_replace_callback</refname>
  <refpurpose>マルチバイト文字列にコールバック関数を用いた正規表現による置換を行う
  </refpurpose>
 </refnamediv>
   
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type><type>null</type></type><methodname>mb_ereg_replace_callback</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>options</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <parameter>string</parameter>から
   <parameter>pattern</parameter>にマッチする文字列を検索し、
   一致した文字列を<parameter>callback</parameter>関数の出力で置換します。
  </para>
  <para>
    この関数の動作は<function>mb_ereg_replace</function>とほぼ同じですが、
    <parameter>replacement</parameter>パラメータの代わりに
    <parameter>callback</parameter>を指定するところが異なります。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
        正規表現パターン。
      </para>
      <para>
        <parameter>pattern</parameter>ではマルチバイト文字列を使用可能です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
        コールバック関数で、
        <parameter>string</parameter>文字列で一致した要素を配列で
        指定してコールされます。
        このコールバック関数は、置換した文字列を返す必要があります。
      </para>
      <para>
        しばしば、
        <function>mb_ereg_replace_callback</function>の
        <parameter>callback</parameter>関数が必要となるのは一度だけである
        場合があります。
        この場合、
        <function>mb_ereg_replace_callback</function>をコールする際の
        コールバックに
        <link linkend="functions.anonymous">匿名関数</link>
        を使用することができます。
        このようにすることで、
        コールに関する全ての情報を一つの場所に集約し、
        他のどこでも使用されないコールバック関数の名前を
        関数の名前空間にばらまかないですみます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
        チェックされる<type>string</type>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       検索オプション。説明は、<function>mb_regex_set_options</function> を参照ください。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    成功した際に置換後の文字列、 そうでない場合はエラー時に &false; を返します。
    <parameter>string</parameter> が現在のエンコーディングに照らして不正な場合は、&null; を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>options</parameter> は、nullable になりました。
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        この関数は、現在のエンコーディングに照らして <parameter>string</parameter>
        が正しいかをチェックするようになりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mb_ereg_replace_callback</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
// this text was used in 2002
// we want to get this up to date for 2003
$text = "April fools day is 04/01/2002\n";
$text.= "Last christmas was 12/24/2001\n";
// the callback function
function next_year($matches)
{
  // as usual: $matches[0] is the complete match
  // $matches[1] the match for the first subpattern
  // enclosed in '(...)' and so on
  return $matches[1].($matches[2]+1);
}
echo mb_ereg_replace_callback(
            "(\d{2}/\d{2}/)(\d{4})",
            "next_year",
            $text);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
April fools day is 04/01/2003
Last christmas was 12/24/2002
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>匿名関数を使用した<function>mb_ereg_replace_callback</function>の例</title>
    <programlisting role="php">
<![CDATA[
<?php
// this text was used in 2002
// we want to get this up to date for 2003
$text = "April fools day is 04/01/2002\n";
$text.= "Last christmas was 12/24/2001\n";

echo mb_ereg_replace_callback(
            "(\d{2}/\d{2}/)(\d{4})",
            function ($matches) {
               return $matches[1].($matches[2]+1);
            },
            $text);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  
  &note.mbstring.encoding.internal;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mb_regex_encoding</function></member>
    <member><function>mb_ereg_replace</function></member>
    <member><link linkend="functions.anonymous">匿名関数</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
