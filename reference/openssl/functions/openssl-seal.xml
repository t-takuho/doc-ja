<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 5bc68add3da3cd18c40f851e944b15095d3a26aa Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi,mumumu -->
<refentry xml:id="function.openssl-seal" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_seal</refname>
  <refpurpose>データをシール(暗号化)する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>openssl_seal</methodname>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>data</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">sealed_data</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">encrypted_keys</parameter></methodparam>
   <methodparam><type>array</type><parameter>public_key</parameter></methodparam>
   <methodparam><type>string</type><parameter>cipher_algo</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">iv</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_seal</function> は、ランダムに生成された秘密鍵
   および指定した <parameter>cipher_algo</parameter> を使用して <parameter>data</parameter> をシール(暗号化)
   します。このキーは、<parameter>public_key</parameter> を ID とする
   公開鍵で暗号化されます。
   それぞれの暗号化されたキーは <parameter>encrypted_keys</parameter> で返されます。
   これは、暗号化されたデータを複数の受信者に
   送信できることを意味します（この際、各受信者は送信側に公開鍵を
   提供します）。各受信者は、暗号化されたデータとその受信者の
   公開鍵で暗号化されたエンベロープキーを受け取る必要があります。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       シールするデータ。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sealed_data</parameter></term>
     <listitem>
      <para>
       シール済みのデータ。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>encrypted_keys</parameter></term>
     <listitem>
      <para>
       暗号化したキーの配列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>public_key</parameter></term>
     <listitem>
      <para>
       公開鍵を含んだ <classname>OpenSSLAsymmetricKey</classname> 
       クラスのインスタンスの配列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cipher_algo</parameter></term>
     <listitem>
      <para>
       暗号化方式
       <caution>
        <simpara>
         デフォルト値 (<literal>'RC4'</literal>) はセキュアでない値です。
         明示的にセキュアな暗号化方式を指定することを強く推奨します。
        </simpara>
       </caution>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iv</parameter></term>
     <listitem>
      <para>
       初期化ベクトル。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功時にシール(暗号化)されたデータの長さ、エラー時に &false;
   を返します。成功時には、暗号化されたデータが
   <parameter>sealed_data</parameter> に、エンベロープキーが
   <parameter>encrypted_keys</parameter> に返されます。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>public_key</parameter> は、
       <classname>OpenSSLAsymmetricKey</classname> クラスのインスタンスの配列を受け入れるようになりました。
       これより前のバージョンでは、
       <literal>OpenSSL key</literal> 型のリソースの配列を受け入れていました。
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>cipher_algo</parameter> は、オプションではなくなりました。
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>iv</parameter> は、nullable になりました。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>openssl_seal</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
// $data には、暗号化されるデータが含まれていると仮定

// 受信者の公開鍵を取得し、使用可能にする
$fp = fopen("/src/openssl-0.9.6/demos/maurice/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pk1 = openssl_get_publickey($cert);
// 2 番目の受信者についても同様
$fp = fopen("/src/openssl-0.9.6/demos/sign/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pk2 = openssl_get_publickey($cert);

// メッセージを暗号化。$pk1 および $pk2 の所有者のみが、$sealed を
// データをそれぞれ $ekeys[0] および $ekeys[1] で復号化することが
// 可能
openssl_seal($data, $sealed, $ekeys, array($pk1, $pk2));

// キーをメモリから開放する
openssl_free_key($pk1);
openssl_free_key($pk2);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>openssl_open</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
