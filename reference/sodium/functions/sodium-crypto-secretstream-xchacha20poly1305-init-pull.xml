<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d76a7fe17dd2488e47d664a8ab38e161b13ac843 Maintainer: mumumu Status: ready -->
<refentry xml:id="function.sodium-crypto-secretstream-xchacha20poly1305-init-pull" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sodium_crypto_secretstream_xchacha20poly1305_init_pull</refname>
  <refpurpose>復号のためのシークレットストリームのコンテキストを初期化する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>sodium_crypto_secretstream_xchacha20poly1305_init_pull</methodname>
   <methodparam><type>string</type><parameter>header</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>key</parameter></methodparam>
  </methodsynopsis>
  <para>
   復号のためのシークレットストリームのコンテキストを初期化します。
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>header</parameter></term>
    <listitem>
     <para>
      シークレットストリームのヘッダ。
      これは、
      <function>sodium_crypto_secretstream_xchacha20poly1305_init_push</function>
      が生成する値のうちの一つを指定しなければいけません。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>key</parameter></term>
    <listitem>
     <para>
      暗号化キー(256ビット)
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   シークレットストリームのステートを返します。
  </para>
 </refsect1>

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <example xml:id="sodium-crypto-secretstream-xchacha20poly1305-init-pull.example.basic"><!-- {{{ -->
   <title><function>sodium_crypto_secretstream_xchacha20poly1305_init_pull</function> の例</title>
   <programlisting role="php">
<![CDATA[
<?php
function decrypt_file(string $inputFilePath, string $outputFilePath, string $key): void
{
    $inputFile = fopen($inputFilePath, 'rb');
    $outputFile = fopen($outputFilePath, 'wb');
    $header = fread($inputFile, 24);

    $state = sodium_crypto_secretstream_xchacha20poly1305_init_pull($header, $key);
    $inputFileSize = fstat($inputFile)['size'];

    // Decrypt the file and write its contents to the output file:
    for ($i = 24; $i < $inputFileSize; $i += 8192) {
        $ctxt_chunk = fread($inputFile, 8192);

        // We're not using $tag, but in real protocols you can use this on encrypt to e.g.
        // trigger a re-key or indicate the end of file. Then, on decrypt, you can assert
        // this behavior.
        [$ptxt_chunk, $tag] = sodium_crypto_secretstream_xchacha20poly1305_pull($state, $ctxt_chunk);
        fwrite($outputFile, $ptxt_chunk);
    }

    sodium_memzero($state);
    fclose($inputFile);
    fclose($outputFile);
}

// sodium_crypto_secretstream_xchacha20poly1305_keygen()
$key = sodium_base642bin('MS0lzb7HC+thY6jY01pkTE/cwsQxnRq0/2L1eL4Hxn8=', SODIUM_BASE64_VARIANT_ORIGINAL);

$example = sodium_hex2bin('971e33b255f0990ef3931caf761c59136efa77b434832f28ec719e3ff73f5aec38b3bba1574ab5b70a8844d8da36a668e802cfea2c');
file_put_contents('hello.enc', $example);
decrypt_file('hello.enc', 'hello.txt.decrypted', $key);
var_dump(file_get_contents('hello.txt.decrypted'));
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(12) "Hello world!"
]]>
   </screen>
  </example><!-- }}} -->
 </refsect1><!-- }}} -->
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
