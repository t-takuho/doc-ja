<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d76a7fe17dd2488e47d664a8ab38e161b13ac843 Maintainer: mumumu Status: ready -->

<refentry xml:id="function.sodium-crypto-pwhash-str" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sodium_crypto_pwhash_str</refname>
  <refpurpose>ASCII 文字でエンコードされたハッシュ値を得る</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>sodium_crypto_pwhash_str</methodname>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>password</parameter></methodparam>
   <methodparam><type>int</type><parameter>opslimit</parameter></methodparam>
   <methodparam><type>int</type><parameter>memlimit</parameter></methodparam>
  </methodsynopsis>
  <para>
   ランダムに生成されたソルト値と、
   CPU とメモリへの攻撃に強いハッシュアルゴリズムを使い、
   指定されたメモリとCPUの使用量の最大値に基づき、
   パスワードの保存に適した ASCII 文字でエンコードされたハッシュを生成します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>password</parameter></term>
    <listitem>
     <para>
      ハッシュを生成するパスワードを文字列で指定します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>opslimit</parameter></term>
    <listitem>
     <para>
      実際に行う計算処理の最大量。
      この値を大きくすると、
      キーを計算するのに必要なCPUサイクルが増加します。
      意図した使い方次第で、
      適切な値の上限値を設定するために、いくつかの定数が存在します。
      弱いものから強いものへと並べると、以下のとおりです:
      <constant>SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE</constant>,
      <constant>SODIUM_CRYPTO_PWHASH_OPSLIMIT_MODERATE</constant>,
      <constant>SODIUM_CRYPTO_PWHASH_OPSLIMIT_SENSITIVE</constant> です。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>memlimit</parameter></term>
    <listitem>
     <para>
      この関数が使用するメモリの最大値をバイト単位で指定します。
      適切な値を選ぶために、ヘルパとなる定数が存在します。
      サイズの順に、以下の通りです:
      <constant>SODIUM_CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE</constant>,
      <constant>SODIUM_CRYPTO_PWHASH_MEMLIMIT_MODERATE</constant>,
      <constant>SODIUM_CRYPTO_PWHASH_MEMLIMIT_SENSITIVE</constant>
      があります。
      これらの値は、<parameter>opslimit</parameter> 
      と一致するものとペアになるべきです。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   ハッシュ化されたパスワードを返します。
  </para>
  <para>
   同じパスワードから同じパスワードハッシュを生成するには、
   <parameter>opslimit</parameter> と
   <parameter>memlimit</parameter> の値を同じにしなければいけません。
   これらは生成されたハッシュに埋め込まれているので、
   ハッシュを検証する際に必要な全てが含まれています。
   これによって、
   <function>sodium_crypto_pwhash_str_verify</function>
   関数が、他の引数に関する情報を追加で保存せずにハッシュを検証できるのです。
  </para>
 </refsect1>

  <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>sodium_crypto_pwhash_str</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$password = 'password';
echo sodium_crypto_pwhash_str(
    $password,
    SODIUM_CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE,
    SODIUM_CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE
);
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
$argon2id$v=19$m=65536,t=2,p=1$oWIfdaXwWwhVmovOBc2NAQ$EbsZ+JnZyyavkafS0hoc4HdaOB0ILWZESAZ7kVGa+Iw
]]>
    </screen>
   </example>
  </para> 
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    ハッシュ値は
    Argon2ID アルゴリズムを使って計算されます。
    このアルゴリズムは、GPU に対する攻撃と
    サイドチャネル攻撃の両方に対する耐性を提供します。
    <function>password_hash</function> と異なり、
    salt の引数は存在せず(自動生成されます)、
    <parameter>opslimit</parameter> と
    <parameter>memlimit</parameter> の値が必須になっています。
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sodium_crypto_pwhash_str_verify</function></member>
    <member><function>sodium_crypto_pwhash</function></member>
    <member><function>password_hash</function></member>
    <member><function>password_verify</function></member>
    <member><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://download.libsodium.org/doc/password_hashing/the_argon2i_function.html">Libsodium Argon2 docs</link></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
