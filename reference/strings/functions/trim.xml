<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- splitted from ./ja/functions/strings.xml, last change in rev 1.1 -->
<!-- EN-Revision: 27ae0a4a16cdfc868a884c0f0dad7023b5f2709c Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka,mumumu -->
<refentry xml:id="function.trim" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>trim</refname>
  <refpurpose>
   文字列の先頭および末尾にあるホワイトスペースを取り除く
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>trim</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>characters</parameter><initializer>" \n\r\t\v\x00"</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   この関数は <parameter>string</parameter>
   の最初および最後から空白文字を取り除き、
   取り除かれた文字列を返します。2番目のパラメータを指定しない場合、
   <function>trim</function>は以下の文字を削除します。
  </simpara>
  &strings.stripped.characters;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>string</parameter></term>
    <listitem>
     <para>
      ホワイトスペースを取り除く <type>string</type>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>characters</parameter></term>
    <listitem>
     &strings.parameter.characters.optional;
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   ホワイトスペースを取り除いた文字列
  </simpara>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>trim</function>の使用例</title>
    <programlisting role="php">
<![CDATA[
<?php

$text   = "\t\tThese are a few words :) ...  ";
$binary = "\x09Example string\x0A";
$hello  = "Hello World";
var_dump($text, $binary, $hello);

print "\n";

$trimmed = trim($text);
var_dump($trimmed);

$trimmed = trim($text, " \t.");
var_dump($trimmed);

$trimmed = trim($hello, "Hdle");
var_dump($trimmed);

$trimmed = trim($hello, 'HdWr');
var_dump($trimmed);

// trim the ASCII control characters at the beginning and end of $binary
// (from 0 to 31 inclusive)
$clean = trim($binary, "\x00..\x1F");
var_dump($clean);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(32) "        These are a few words :) ...  "
string(16) "    Example string
"
string(11) "Hello World"

string(28) "These are a few words :) ..."
string(24) "These are a few words :)"
string(5) "o Wor"
string(9) "ello Worl"
string(14) "Example string"
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>trim</function> を用いて配列の値をトリミングする</title>
    <programlisting role="php">
<![CDATA[
<?php
function trim_value(&$value) 
{ 
    $value = trim($value); 
}

$fruit = array('apple','banana ', ' cranberry ');
var_dump($fruit);

array_walk($fruit, 'trim_value');
var_dump($fruit);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(3) {
  [0]=>
  string(5) "apple"
  [1]=>
  string(7) "banana "
  [2]=>
  string(11) " cranberry "
}
array(3) {
  [0]=>
  string(5) "apple"
  [1]=>
  string(6) "banana"
  [2]=>
  string(9) "cranberry"
}

]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>わかるかな?: 途中の文字が取り除かれる</title>
   <para>
    <function>trim</function> は <type>string</type> の先頭と末尾から文字を取り除くので、
    文字列の途中にある文字がを取り除かれたり (あるいは取り除かれなかったり) すると少し戸惑うことでしょう。
    <literal>trim('abc', 'bad')</literal> は 'a' と 'b' を両方取り除きます。
    なぜなら、まず 'a' を取り除いた時点で 'b' が先頭の文字となり、それも取り除く対象だからです。
    したがって、この処理は正しく動きます。一方、
    <literal>trim('abc', 'b')</literal> は動かないでしょう。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>ltrim</function></member>
   <member><function>rtrim</function></member>
   <member><function>str_replace</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
