<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 7efec4c29a3cb6d6e7abe325a3c0d5b6024fa37c Maintainer: takagi Status: ready -->
<!-- CREDITS: hirokawa,mumumu -->
<refentry xml:id="function.strpos" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>strpos</refname>
  <refpurpose>文字列内の部分文字列が最初に現れる場所を見つける</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>strpos</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>string</type><parameter>needle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   文字列 <parameter>haystack</parameter> の中で、
   <parameter>needle</parameter> が最初に現れる位置を探します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       検索対象の文字列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
       検索する文字列。
      </para>
      &strings.parameter.needle.non-string;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       指定すると、文字列内での検索開始位置がその位置になります。
       負の数を指定すると、文字列の末尾からこの数だけ戻った場所から検索を開始します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   needle が見つかった位置を、
   <parameter>haystack</parameter> 文字列の先頭 (<parameter>offset</parameter> の値とは無関係) からの相対位置で返します。
   文字列の開始位置は <literal>0</literal> であり、<literal>1</literal> ではないことに注意しましょう。
  </para>
  <para>
   needle が見つからない場合は &false; を返します。
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &strings.changelog.needle-empty;
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>needle</parameter> に数値を渡すことはサポートされなくなりました。
      </entry>
     </row>
     <row>
      <entry>7.3.0</entry>
      <entry>
       <parameter>needle</parameter> に数値を渡すことは非推奨になりました。
      </entry>
     </row>
     <row>
      <entry>7.1.0</entry>
      <entry>
       負の <parameter>offset</parameter> をサポートするようになりました。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><literal>===</literal> の使用</title>
    <programlisting role="php">
<![CDATA[
<?php
$mystring = 'abc';
$findme   = 'a';
$pos = strpos($mystring, $findme);

// === を使用していることに注目しましょう。単純に == を使ったのでは
// 期待通りに動作しません。なぜなら 'a' が 0 番目 (最初) の文字だからです。
if ($pos === false) {
    echo "文字列 '$findme' は、文字列 '$mystring' の中で見つかりませんでした";
} else {
    echo "文字列 '$findme' が文字列 '$mystring' の中で見つかりました";
    echo " 見つかった位置は $pos です";
}
?>
]]>
    </programlisting>
   </example>

   <example>
    <title>!== の使用</title>
    <programlisting role="php">
<![CDATA[
<?php
$mystring = 'abc';
$findme   = 'a';
$pos = strpos($mystring, $findme);

// !== 演算子も使用可能です。ここで != を使っても期待通りに動作しません。
// なぜなら 'a' が 0 番目の文字だからです。(0 != false) を評価すると
// false になってしまいます。
if ($pos !== false) {
     echo "文字列 '$findme' が文字列 '$mystring' の中で見つかりました";
         echo " 見つかった位置は $pos です";
} else {
     echo "文字列 '$findme' は、文字列 '$mystring' の中で見つかりませんでした";
}
?>
]]>
    </programlisting>
   </example>

   <example>
    <title>オフセットの使用</title>
    <programlisting role="php">
<![CDATA[
<?php
// オフセット以前の内容を無視して文字を探すこともできます。
$newstring = 'abcdef abcdef';
$pos = strpos($newstring, 'a', 1); // $pos は 0 ではなく 7 となります。
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>stripos</function></member>
    <member><function>str_contains</function></member>
    <member><function>str_ends_with</function></member>
    <member><function>str_starts_with</function></member>
    <member><function>strrpos</function></member>
    <member><function>strripos</function></member>
    <member><function>strstr</function></member>
    <member><function>strpbrk</function></member>
    <member><function>substr</function></member>
    <member><function>preg_match</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
