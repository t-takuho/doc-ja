<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ba990c472c6d032479ea12f062abde0b1d7a80a2 Maintainer: mumumu Status: ready -->

<section xml:id="apcu.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  大半のインストール環境では、APCu はデフォルトの設定で問題ありません。
  しかし、本格的なユーザーは以下のパラメータのチューニングを考慮すべきです。
 </para>
 <para>
  APCuを設定するには、ひとつ決断が必要です。
  どれくらいのメモリをAPCuに割り当てるのかということです。
  この値を制御するのは <literal>apc.shm_size</literal> です。
  以下のこれに関するセクションを注意深く読んで下さい。
 </para>
 <para>
  サーバーがいったん起動したら、
  拡張モジュールにバンドルされている <literal>apc.php</literal>
  スクリプトをドキュメントルートのどこかにコピーし、ブラウザから見てみましょう。
  apcu の内部動作を詳細に分析した情報が見られるからです。
  gd が有効になっている場合、面白いグラフも見られるでしょう。
  </para>
  <para>
   apcu が動作している場合、(左側の) <literal>Cache full count</literal>
   の数が、キャッシュの容量が一杯になり、
   メモリを開放するためにエントリを強制的に掃除しなければならなかった回数を示しています。
   強制的に掃除している間、<literal>apc.ttl</literal> が指定されている場合、
   APCu はまず期限切れのエントリを削除しようとします。
   つまり、TTL が期限切れになったか、
   TTL が設定されずに <literal>apc.ttl</literal> 秒間アクセスがないエントリです。
   <literal>apc.ttl</literal> が指定されていないか、
   期限切れのエントリを削除しても十分な容量を確保できない場合、
   APCu はキャッシュ全体を削除してしまいます。
  </para>
  <para>
   強制的に掃除しなければならなかった回数は、
   上手に設定されているキャッシュであれば最小にすべきです。
   キャッシュが頻繁に一杯になり、強制的に開放される場合、
   スクリプトのパフォーマンスに悪影響が出てしまいます。
   この数値を最小にする一番簡単な方法は、APCu により多くのメモリを割り当てることです。
 </para>
 <para>
  APCu が mmap (メモリマッピング) のサポートを有効にしてコンパイルされている場合、
  APCu はメモリセグメントをひとつしか使いません。
  一方で、SHM (SysV共有メモリ) を有効にしてビルドした場合は、複数のメモリセグメントを使います。
  SHM は <literal>/proc/sys/kernel/shmmax</literal> で最大値を持っていますが、MMAP にはそれがありません。
  一般的には、MMAP のサポートを有効にすることをおすすめします。
  なぜなら、MMAPはWebサーバーが再起動したときのメモリの再要求の速度が速く、
  全体として起動時のメモリ割り当ての負荷が減るからです。
 </para>
 <para>
  <table>
   <title>APCu の設定オプション</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="ini.apcu.enabled">apc.enabled</link></entry>
      <entry>1</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.shm-segments">apc.shm_segments</link></entry>
      <entry>1</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.shm-size">apc.shm_size</link></entry>
      <entry>"32M"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.entries-hint">apc.entries_hint</link></entry>
      <entry>4096</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.ttl">apc.ttl</link></entry>
      <entry>0</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.gc-ttl">apc.gc_ttl</link></entry>
      <entry>3600</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.mmap-file-mask">apc.mmap_file_mask</link></entry>
      <entry>NULL</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.slam-defense">apc.slam_defense</link></entry>
      <entry>0</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.enable-cli">apc.enable_cli</link></entry>
      <entry>0</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.use-request-time">apc.use_request_time</link></entry>
      <entry>0</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>APCu 5.1.19 より前のバージョンでは、デフォルト値は <literal>1</literal> でした。</entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.serializer">apc.serializer</link></entry>
      <entry>"php"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry>APCu 5.1.15 より前のバージョンでは、デフォルト値は <literal>"default"</literal> でした。</entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.coredump-unmap">apc.coredump_unmap</link></entry>
      <entry>0</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apcu.preload-path">apc.preload_path</link></entry>
      <entry>NULL</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>
 
 &ini.descriptions.title;
 
 <para>
  <variablelist>
   <varlistentry xml:id="ini.apcu.enabled">
    <term>
     <parameter>apc.enabled</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      APC を無効にする場合、<literal>apc.enabled</literal> を0に設定できます。
      これはAPCがPHPに静的にコンパイルされている場合に役に立ちます。
      なぜなら、これ以外にAPCを無効にする方法がないからです。
      (DSO としてコンパイルされている場合、
      <literal>php.ini</literal> の <literal>extension</literal> の行をコメントアウトすれば済みます)
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.shm-segments">
    <term>
     <parameter>apc.shm_segments</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      コンパイラキャッシュに割り当てる共有メモリセグメントの数。
      APC の共有メモリが不足したが、<literal>apc.shm_size</literal>
      にシステムが許可できるできるだけ高い値を設定している場合、
      この値を増やすことでAPCがメモリ不足になることを避けられるかもしれません。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.shm-size">
    <term>
     <parameter>apc.shm_size</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      個別の共有メモリセグメントのサイズ。
      <link linkend="faq.using.shorthandbytes">このFAQ</link> で説明している短縮記法を使います。
      デフォルトでは、システムによって(ほとんどのBSD系)は、
      共有メモリセグメントのサイズの限界値がとても小さい場合があります。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.entries-hint">
    <term>
     <parameter>apc.entries_hint</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      異なる値を保存する数のおおよその"ヒント"。
      わからない場合はゼロを設定して下さい。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.ttl">
    <term>
     <parameter>apc.ttl</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      ここで指定された秒数アクセスされていない場合、
      TTL を明示的に指定しないキャッシュエントリが期限切れとみなされます。
      こうすることで、キャッシュを挿入している間や、すべてのキャッシュを削除する前に、
      そうした期限切れのエントリを都合よく削除できます。
      こうした削除は場当たり的に行われるため、
      <literal>apc.ttl</literal> 秒より古いデータであっても
      まだ読み取れてしまうことがあり得るので注意してください。
      この設定は、TTLが明示的に指定されたキャッシュエントリに対しては意味がありません。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.gc-ttl">
    <term>
     <parameter>apc.gc_ttl</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      キャッシュエントリがガベージコレクションのリストに残っても良い秒数。
      この値はキャッシュされたソースファイルを実行中にWebサーバーが死んだ場合のフェイルセーフを提供します。
      つまり、このソースファイルが変更された場合、
      古いバージョンに割り当てられたメモリはTTLに達するまで絶対に要求されないからです。
      この機能を無効にするにはゼロを設定して下さい。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.mmap-file-mask">
    <term>
     <parameter>apc.mmap_file_mask</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      <literal>--enable-mmap</literal> を使ってPHPをコンパイルした場合に、
      mmapされたメモリ領域をファイルベースか共有メモリベースにするかを決めるために、
      mmapモジュールに渡すmktempスタイルのファイルマスク。
      ファイルベースのmmapの場合、
      <literal>/tmp/apc.XXXXXX</literal> のように設定します
      (<literal>X</literal> はちょうど6つにして下さい)。
      POSIXスタイルの shm_open/mmap を使う場合、
      <literal>.shm</literal> をマスクのどこかに含めて下さい。
      e.g. <literal>/apc.shm.XXXXXX</literal>。
      匿名のmmapされたメモリを使うために
      kernel の <literal>/dev/zero</literal> インターフェイスを使う場合、
      この値に <literal>/dev/zero</literal> も設定できます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.slam-defense">
    <term>
     <parameter>apc.slam_defense</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      とても負荷が高いサーバーでは、いつサーバーを起動したり、
      変更したりしても、同じファイルを同時にキャッシュしようとする
      多くのプロセスの競合が発生します。
      <literal>apc.slam_defense</literal> の値を <literal>1</literal>
      に設定すると、確率的な仕組みを使うことで、
      複数のプロセスが同時に同じファイルをキャッシュするのを防ぐのを助けます。
      同じキーが短期間に異なるプロセスからキャッシュされようとすると、
      現在のプロセスがキャッシュをスラム化させるのを防ぐため、
      キャッシュをスキップします。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.enable-cli">
    <term>
     <parameter>apc.enable_cli</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      この設定はほとんどの場合、テストかデバッグに使います。
      これを設定すると、CLI版PHPでAPCが有効になります。
      通常の状態では、CLI リクエストのたびにAPCキャッシュを生成し、
      収集し、破棄するのは望ましくありません。しかし、テストシナリオによっては、
      CLI版のPHPでAPCを簡単に有効に出来た方が便利な場合があります。
     </para>
    </listitem>
   </varlistentry> 
   <varlistentry xml:id="ini.apcu.serializer">
    <term>
     <parameter>apc.serializer</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      APCにサードパーティーのシリアライザを使わせる場合に使います。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.coredump-unmap">
    <term>
     <parameter>apc.coredump_unmap</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      SIGSEGV のようなシグナルのシグナルハンドラをAPCで有効にします。
      ハンドラでは、シグナルを受け取ったときにコアファイルに書き込みます。
      これらのシグナルを受け取った場合、
      APC はコアファイルから除外するために共有メモリセグメントをアンマップしようとします。
      この設定は致命的なシグナルを受け取ったり、
      APCの共有メモリセグメントの数を大きく設定している場合に、
      システムの安定性を向上させる可能性があります。
     </para>
     <warning>
      <para>
       この機能は潜在的に危険です。
       致命的なシグナルハンドラで共有メモリセグメントをアンマップすると、
       致命的なエラーが発生したときの動作が未定義になる可能性があるからです。
      </para>
     </warning>
     <note>
      <para>
       kernel によっては、コアダンプファイルを生成するときに
       様々なタイプの共有メモリを無視する機能を提供するものがあります。
       こうしたkernelの実装は、
       Apache scoreboard のような重要な共有メモリセグメントも無視するかもしれません。
      </para>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apcu.preload-path">
    <term>
     <parameter>apc.preload_path</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      オプション。キャッシュデータを起動時に読み込むディレクトリのパスを設定します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apcu.use-request-time">
    <term>
     <parameter>apc.use_request_time</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      <acronym>TTL</acronym> に <acronym>SAPI</acronym> リクエストの開始時刻を使います。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
