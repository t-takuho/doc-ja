<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 60af8c2b746d51c1556cc2ddc4d4163222347b96 Maintainer: shimooka Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.class-implements" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>class_implements</refname>
  <refpurpose>
   与えられたクラスあるいはインターフェイスが実装しているインターフェイスを返す
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>class_implements</methodname>
   <methodparam><type class="union"><type>object</type><type>string</type></type><parameter>object_or_class</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>autoload</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   この関数は、与えられたクラス <parameter>object_or_class</parameter>
   とその親が実装しているインターフェイスを配列で返します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>object_or_class</parameter></term>
     <listitem>
      <para>
       オブジェクト (クラスのインスタンス)
       もしくは文字列 (クラス名あるいはインターフェイス名) を指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>autoload</parameter></term>
     <listitem>
      <para>
       まだロードされていない場合に <link linkend="language.oop5.autoload">オートロード</link> するかどうか。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功した場合に配列、
   指定されたクラスが存在しない場合に &false; を返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>class_implements</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php

interface foo { }
class bar implements foo {}

print_r(class_implements(new bar));

// パラメータを文字列として指定しても良い
print_r(class_implements('bar'));

spl_autoload_register();

// 'not_loaded' クラスをロードするためにオートローディングを使用する
print_r(class_implements('not_loaded', true));

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [foo] => foo
)
Array
(
    [foo] => foo
)
Array
(
    [interface_of_not_loaded] => interface_of_not_loaded
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    オブジェクトが、インターフェイスを実装しているかどうかを調べるには、
    &instanceof; か、<function>is_a</function> 関数を代わりに使うべきです。
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>class_parents</function></member>
    <member><function>get_declared_interfaces</function></member>
    <member><function>is_a</function></member>
    <member>&instanceof;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
